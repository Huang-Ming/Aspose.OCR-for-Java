<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working with Document Conversion</title>
    <link>https://docs.aspose.com/pdf/net/working-with-document-conversion/</link>
    <description>Recent content in Working with Document Conversion on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.aspose.com/pdf/net/working-with-document-conversion/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Convert a File to PDF Format</title>
      <link>https://docs.aspose.com/pdf/net/convert-a-file-to-pdf-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-a-file-to-pdf-format/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/merger&#34;&gt;products.aspose.app/pdf/merger&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;convert-xps-files-to-pdf-format&#34;&gt;&lt;strong&gt;Convert XPS files to PDF format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The XPS file type is primarily associated with the XML Paper Specification by Microsoft Corporation. The XML Paper Specification (XPS), formerly codenamed Metro and subsuming the Next Generation Print Path (NGPP) marketing concept, is Microsoft&amp;rsquo;s initiative to integrate document creation and viewing into its Windows operating system.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

The file format is basically a zipped XML file which is primarily used for distribution and storage. It&amp;rsquo;s very difficult to edit and mostly implemented by Microsoft.
&lt;/div&gt;

&lt;p&gt;In order to convert XPS to PDF with Aspose.PDF for .NET, we have introduced a class named &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/xpsloadoptions&#34;&gt;XpsLoadOptions&lt;/a&gt; which is used to initialize a LoadOptions object. Later, this object is passed as an argument during the Document object initialization and it helps the PDF rendering engine to determine the source document&amp;rsquo;s input format.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

In both XP and Windows 7, you should find an XPS Printer pre-installed if you look in the Control Panel and then &lt;strong&gt;Printers&lt;/strong&gt;. To create these files you can use that printer for the output device. In Windows 7, you should be able to just double-click the file to open it in a XPS viewer. You may also download &lt;a href=&#34;http://windows.microsoft.com/en-US/windows-vista/what-is-the-xps-viewer&#34;&gt;XPS viewer&lt;/a&gt; from Microsoft&amp;rsquo;s website.
&lt;/div&gt;

&lt;p&gt;The following code snippet shows the process of converting XPS file into PDF format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-XPSToPDF-XPSToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pcl-file-to-pdf-format&#34;&gt;&lt;strong&gt;Convert PCL File to PDF Format&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Try online
You can check the quality of Aspose.PDF conversion and view the results online at this link:
&lt;a href=&#34;https://products.aspose.app/pdf/conversion/pcl-to-pdf&#34;&gt;products.aspose.app/pdf/conversion/pcl-to-pdf&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;PCL (Printer Command Language) is a Hewlett-Packard printer language developed to access standard printer features. PCL levels 1 through 5e/5c are command based languages using control sequences that are processed and interpreted in the order they are received. At a consumer level, PCL data streams are generated by a print driver. PCL output can also be easily generated by custom applications&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Currently only PCL5 and older versions are supported.
&lt;/div&gt;

&lt;h3 id=&#34;conversion-of-pcl-file-to-pdf-format&#34;&gt;&lt;strong&gt;Conversion of PCL File to PDF Format&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;To allow conversion from PCL to PDF, Aspose.PDF has the class &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/pclloadoptions&#34;&gt;PclLoadOptions&lt;/a&gt; which is used to initialize the LoadOptions object. Later on this object is passed as an argument during Document object initialization and it helps the PDF rendering engine to determine the input format of source document. The following code snippet shows the process of converting a PCL file into PDF format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PCLToPDF-PCLToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;supported-features&#34;&gt;&lt;strong&gt;Supported Features&lt;/strong&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Sets of Commands&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Exceptions&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Job control commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Duplex printing mode&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Control print process: number pf copies, output bin, simplex/duplex printing, left and top offsets etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Page control commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Perforation Skip command&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Specify a size of page, margins, page orientation inter -lines, -character distances etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Cursor Positioning Commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt; &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Specify cursor position and, hence, origins of text, raster or vector images and details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Font selection commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;p&gt;1. Transparent Print Data Command.&lt;/p&gt;&lt;p&gt;2. Embedded soft fonts. In current version instead of creating soft font our library selects suitable font from existing &amp;ldquo;hard&amp;rdquo; TrueType fonts installed on a target machine. &lt;br&gt;   Suitability is defined by width/height ratio. &lt;br&gt;   This feature works only for Bitmap and TrueType fonts and do not guarantee that text printed with soft font will be relevant to the one in a source file. &lt;br&gt;   Because character codes in soft font can unmatched default ones.&lt;/p&gt;&lt;p&gt;3. User Defined Symbol Sets.&lt;/p&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow loading soft (embedded) fonts from PCL file and managing them in memory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Raster graphics commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Only black &amp;amp; white&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow loading raster images from PCL file to memory, specify raster parameters. &lt;br&gt;such as width, height, compression type, resolution etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Color commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt; &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow coloring for all printable objects.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Print Model commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt; &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow filling text, raster images and rectangular areas with a raster predefined and &lt;br&gt;user-defined patterns specify transparency mode for patterns and source raster image. &lt;br&gt;Predefined patterns are hatching, cross-hatch and shading ones.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Rectangle area fill commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt; &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow creation and filling rectangular areas with patterns.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;HP-GL/2 Vector Graphics commands&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;+&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Screened Vector Command (SV), Transparency Mode Command (TR), Transparent Data Command (TD), RO (Rotate Coordinate System), Scalable or Bitmap Fonts Command (SB), Character Slant Command (SL) and Extra Space (ES) are not implemented and DV (Define Variable Text Path) commands are realized in beta version.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow loading HP-GL/2 vector images from PCL file into memory. Vector image has an origin at lower left corner of the printable area, can be scaled, translated, rotated and clipped. &lt;br&gt;Vector image can contain text, as labels, and geometric figures such as rectangle, circle, ellipse, line, arc, bezier curve and complex figures composed from the simple ones. &lt;br&gt;Closed figures including letters of labels can be filled with solid fill or vector pattern. &lt;br&gt;Pattern can be hatching, cross-hatch, shading, raster used-defined, PCL hatching or cross-hatch and PCL user-defined. PCL patterns are raster. Labels can be individually rotated, scaled, and directed in four directions: up, down, left and right. Left and Right directions involve one-after-another letter arrangement. Up and Down directions involve one-under-another letter arrangement.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Macroses&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;―&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt; &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow loading a sequence of PCL commands into memory and use this sequence many times, for example, to print page header or set one formatting for a set of pages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Unicode text&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;―&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt; &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Allow printing non ASCII characters. Not implemented due to lack of sample files with &lt;br&gt;Unicode text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PCL6 (PCL-XL)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt; &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Realized only in Beta version because of lack in test files. Embedded fonts also are not supported.&lt;br&gt;JetReady extension is not supported because it is impossible to have JetReady specification.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Binary file format.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;known-issues&#34;&gt;&lt;strong&gt;Known Issues&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Origin of text strings and images can be slightly differed from the ones in a sorce PCL file If print direction is not 0º. The same refers to vector images if coordinate system of vector plot is rotated (RO command preceded).&lt;/li&gt;
&lt;li&gt;Origin of labels in vector images can be differ from the ones in a sorce PCL file If the labels are influenced by a sequence of commands: Label Origin (LO), Define Variable Text Path (DV), Absolute Direction (DI) or Relative Direction (DR).&lt;/li&gt;
&lt;li&gt;A text can be incorrectly read if it must be rendered with Bitmap or TrueType soft (embedded) font, because currently these fonts are only partially supported (See exceptions in &amp;ldquo;Supported features table&amp;rdquo;). In this situation text can be correctly read only if character codes in a soft font corresponds to default ones. A style of the read text also can be differed from the one in source PCL file because it is not necessary to set style in soft font header.&lt;/li&gt;
&lt;li&gt;If parsed PCL file contains Intellifont or Universal soft fonts exception will be thrown, because Intellifont and Universal font are not supported at all.&lt;/li&gt;
&lt;li&gt;If parsed PCL file contains macros commands the result of parsing will strongly differ from the source file, because macros commands are not supported.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;convert-postscript-to-pdf-format&#34;&gt;&lt;strong&gt;Convert PostScript to PDF Format&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/ps-to-pdf&#34;&gt;products.aspose.app/pdf/conversion/ps-to-pdf&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;In order to convert a PostScript file to PDF format, Aspose.PDF for .NET offers &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/psloadoptions&#34;&gt;PsLoadOptions &lt;/a&gt;class which is used to initialize the LoadOptions object. Later this object can be passed as an argument to Document object constructor, which will help PDF Rendering Engine to determine the format of source document. Following code snippet can be used to convert a PostScript file into PDF format:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PostscriptToPDF-1.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-svg-file-to-pdf-format&#34;&gt;&lt;strong&gt;Convert SVG File to PDF Format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Scalable Vector Graphics (SVG) is a family of specifications of an XML-based file format for two-dimensional vector graphics, both static and dynamic (interactive or animated). The SVG specification is an open standard that has been under development by the World Wide Web Consortium (W3C) since 1999.&lt;/p&gt;
&lt;p&gt;SVG images and their behaviors are defined in XML text files. This means that they can be searched, indexed, scripted and, if required, compressed. As XML files, SVG images can be created and edited with any text editor, but it is often more convenient to create them with drawing programs such as Inkscape.&lt;/p&gt;
&lt;p&gt;To convert SVG files to PDF, use the class named &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/svgloadoptions&#34;&gt;SvgLoadOptions&lt;/a&gt; which is used to initialize the LoadOptions object. Later, this object is passed as an argument during the Document object initialization and helps the PDF rendering engine to determine the input format of the source document.&lt;/p&gt;
&lt;p&gt;The following code snippet shows the process of converting SVG file into PDF format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-SVGToPDF-SVGToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;get-svg-dimensions&#34;&gt;&lt;strong&gt;Get SVG dimensions&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;It is also possible to get the dimensions of the source SVG file. This information can be useful if we want the SVG to cover the entire page of the output PDF. The ScgLoadOption class&amp;rsquo; AdjustPageSize property fulfills this requirement. The default value of this property is false. If the value is set to true, the output PDF will have same size (dimensions) as the source SVG.&lt;/p&gt;
&lt;p&gt;The following code snippet shows the process of getting the source SVG file&amp;rsquo;s dimensions and generating a PDF file.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-GetSVGDimensions-GetSVGDimensions.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;svg-supported-features&#34;&gt;&lt;strong&gt;SVG Supported Features&lt;/strong&gt;&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;SVG Tag&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Sample Use&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;circle&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle id=&amp;quot;r2&amp;quot; cx=&amp;quot;10&amp;quot; cy=&amp;quot;10&amp;quot; r=&amp;quot;10&amp;quot; stroke=&amp;quot;blue&amp;quot; stroke-width=&amp;quot;2&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;defs &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;defs&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;rect id=&amp;quot;r1&amp;quot; width=&amp;quot;15&amp;quot; height=&amp;quot;15&amp;quot; stroke=&amp;quot;blue&amp;quot; stroke-width=&amp;quot;2&amp;quot; /&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;circle id=&amp;quot;r2&amp;quot; cx=&amp;quot;10&amp;quot; cy=&amp;quot;10&amp;quot; r=&amp;quot;10&amp;quot; stroke=&amp;quot;blue&amp;quot; stroke-width=&amp;quot;2&amp;quot;/&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;circle id=&amp;quot;r3&amp;quot; cx=&amp;quot;10&amp;quot; cy=&amp;quot;10&amp;quot; r=&amp;quot;10&amp;quot; stroke=&amp;quot;blue&amp;quot; stroke-width=&amp;quot;3&amp;quot;/&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;/defs&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;   &amp;lt;use x=&amp;quot;25&amp;quot; y=&amp;quot;40&amp;quot; xlink:href=&amp;quot;#r1&amp;quot; fill=&amp;quot;red&amp;quot;/&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;use x=&amp;quot;35&amp;quot; y=&amp;quot;15&amp;quot; xlink:href=&amp;quot;#r2&amp;quot; fill=&amp;quot;green&amp;quot;/&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;use x=&amp;quot;58&amp;quot; y=&amp;quot;50&amp;quot; xlink:href=&amp;quot;#r3&amp;quot; fill=&amp;quot;blue&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ecllipse &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;ellipse cx=&amp;quot;2.5&amp;quot; cy=&amp;quot;1.5&amp;quot; rx=&amp;quot;2&amp;quot; ry=&amp;quot;1&amp;quot; fill=&amp;quot;red&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;font&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;100&amp;quot; font-size=&amp;quot;15&amp;quot; fill=&amp;quot;red&amp;quot; &amp;gt;&lt;/code&gt;  &lt;br&gt;    Sample text  &lt;br/&gt;&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;g &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;g fill=&amp;quot;none&amp;quot; stroke=&amp;quot;dimgray&amp;quot; stroke-width=&amp;quot;1.5&amp;quot;&amp;gt;&lt;/code&gt; &lt;br/&gt;&lt;code&gt;&amp;lt;line x1=&amp;quot;-7&amp;quot; y1=&amp;quot;-7&amp;quot; x2=&amp;quot;-3&amp;quot; y2=&amp;quot;-3&amp;quot;/&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;line x1=&amp;quot;7&amp;quot; y1=&amp;quot;7&amp;quot; x2=&amp;quot;3&amp;quot; y2=&amp;quot;3&amp;quot;/&amp;gt;&lt;/code&gt;  &lt;br&gt;&lt;code&gt;&amp;lt;line x1=&amp;quot;-7&amp;quot; y1=&amp;quot;7&amp;quot; x2=&amp;quot;-3&amp;quot; y2=&amp;quot;3&amp;quot;/&amp;gt;&lt;/code&gt; &lt;br/&gt;&lt;code&gt;&amp;lt;line x1=&amp;quot;7&amp;quot; y1=&amp;quot;-7&amp;quot; x2=&amp;quot;3&amp;quot; y2=&amp;quot;-3&amp;quot;/&amp;gt;&lt;/code&gt; &lt;br/&gt;&lt;code&gt;&amp;lt;/g&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;image&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;image id=&amp;quot;ShadedRelief&amp;quot; x=&amp;quot;24&amp;quot; y=&amp;quot;4&amp;quot; width=&amp;quot;64&amp;quot; height=&amp;quot;82&amp;quot; xlink:href=&amp;quot;relief.jpg&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;line&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;line style=&amp;quot;stroke:#eea;stroke-width:8&amp;quot; x1=&amp;quot;10&amp;quot; y1=&amp;quot;30&amp;quot; x2=&amp;quot;260&amp;quot; y2=&amp;quot;100&amp;quot;/&amp;gt;&lt;/code&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;path style=&amp;quot;fill:#daa;fill-rule:evenodd;stroke:red&amp;quot; d=&amp;quot;M 230,150 C 290,30 10,255 110,140 z &amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;polygon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;polygon style=&amp;quot;stroke:#24a;stroke-width:1.5;fill:#eefefe&amp;quot; points=&amp;quot;10,10 180,10 10,250 10,10&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;polyline&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;polyline fill=&amp;quot;none&amp;quot; stroke=&amp;quot;dimgray&amp;quot; stroke-width=&amp;quot;1&amp;quot; points=&amp;quot;-3,-6 3,-6 3,1 5,1 0,7 -5,1 -3,1 -3,-5&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;rect &lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;rect x=&amp;quot;0&amp;quot; y=&amp;quot;0&amp;quot; width=&amp;quot;400&amp;quot; height=&amp;quot;600&amp;quot; stroke=&amp;quot;none&amp;quot; fill=&amp;quot;aliceblue&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;style&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;path style=&amp;quot;fill:#daa;fill-rule:evenodd;stroke:red&amp;quot; d=&amp;quot;M 230,150 C 290,30 10,255 110,140 z &amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;svg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;svg xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot; version=&amp;quot;1.1&amp;quot; width=&amp;quot;10cm&amp;quot; height=&amp;quot;5cm&amp;quot; &amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;text&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text font-family=&amp;quot;sans-serif&amp;quot; fill=&amp;quot;dimgray&amp;quot; font-size=&amp;quot;22px&amp;quot; font-weight=&amp;quot;bold&amp;quot; x=&amp;quot;58&amp;quot; y=&amp;quot;30&amp;quot; pointer-events=&amp;quot;none&amp;quot;&amp;gt;Map Title&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;tref&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;defs&amp;gt;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;  &amp;lt;text id=&amp;quot;ReferencedText&amp;quot;&amp;gt;&lt;/code&gt;   &lt;br&gt;    Referenced character data   &lt;br/&gt;&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;/defs&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;100&amp;quot; font-size=&amp;quot;15&amp;quot; fill=&amp;quot;red&amp;quot; &amp;gt;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;&amp;lt;tref xlink:href=&amp;quot;#ReferencedText&amp;quot;/&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;tspan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;tspan dy=&amp;quot;25&amp;quot; x=&amp;quot;25&amp;quot;&amp;gt; six ink color input value.Here it will&amp;lt;/tspan&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;use&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;defs&amp;gt;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;&amp;lt;text id=&amp;quot;Text&amp;quot; x=&amp;quot;400&amp;quot; y=&amp;quot;200&amp;quot;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;font-family=&amp;quot;Verdana&amp;quot; font-size=&amp;quot;100&amp;quot; text-anchor=&amp;quot;middle&amp;quot; &amp;gt;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;Masked text&lt;/code&gt;&lt;br&gt;   &lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;&amp;lt;use xlink:href=&amp;quot;#Text&amp;quot; fill=&amp;quot;blue&amp;quot;   /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;SVG Tag Property&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Sample Use&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;fill&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle cx=&amp;quot;120&amp;quot; cy=&amp;quot;50&amp;quot; r=&amp;quot;40&amp;quot; stroke=&amp;quot;green&amp;quot; stroke-width=&amp;quot;2&amp;quot; fill=&amp;quot;magenta&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;fill-opacity&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;path id=&amp;quot;Blue50&amp;quot; d=&amp;quot;M 0 125 L 100 125 L 100 225 z&amp;quot; fill=&amp;quot;#00ffff&amp;quot; fill-opacity=&amp;quot;.5&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;font-stretch&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;20&amp;quot; font-family=&amp;quot;arial&amp;quot; font-size=&amp;quot;15&amp;quot; fill=&amp;quot;blue&amp;quot; font-stretch=&amp;quot;normal&amp;quot; &amp;gt;&lt;/code&gt;&lt;br&gt;   font-stretch normal  &lt;br&gt;   &lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;font-weight&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text font-family=&amp;quot;sans-serif&amp;quot; fill=&amp;quot;dimgray&amp;quot; font-size=&amp;quot;22px&amp;quot; font-weight=&amp;quot;bold&amp;quot; x=&amp;quot;58&amp;quot; y=&amp;quot;30&amp;quot; pointer-events=&amp;quot;none&amp;quot;&amp;gt;Map Title&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;opacity&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle id=&amp;quot;a&amp;quot; r=&amp;quot;30&amp;quot; fill=&amp;quot;url(#g1)&amp;quot; stroke=&amp;quot;black&amp;quot; opacity=&amp;quot;0.5&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;stroke-dasharray&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;path d=&amp;quot;M 50 50 L 100 50 L 100 100 L 150 100 L 150 50 L 200 50&amp;quot; &lt;/code&gt;   &lt;br&gt;   &lt;code&gt;fill=&amp;quot;none&amp;quot; stroke=&amp;quot;red&amp;quot; stroke-width=&amp;quot;2&amp;quot; &lt;/code&gt;   &lt;br&gt;   &lt;code&gt;stroke-dashoffset=&amp;quot;0&amp;quot; stroke-dasharray=&amp;quot;1 2 3 4 5 6&amp;quot;  /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;stroke-dashoffset&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text stroke=&amp;quot;black&amp;quot; y=&amp;quot;1em&amp;quot;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;stroke-dashoffset=&amp;quot;1%&amp;quot;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;stroke-dasharray=&amp;quot;1px&amp;quot;&amp;gt;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;Sample text&lt;/code&gt;&lt;br&gt;   &lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;stroke-linecap&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle cx=&amp;quot;100&amp;quot; cy=&amp;quot;100&amp;quot; r=&amp;quot;0.00001&amp;quot; stroke=&amp;quot;black&amp;quot; stroke-width=&amp;quot;20&amp;quot; stroke-linecap=&amp;quot;round&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;stroke-linejoin&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;svg stroke-linecap=&amp;quot;square&amp;quot; stroke-miterlimit=&amp;quot;10&amp;quot; stroke-opacity=&amp;quot;1&amp;quot; rendering=&amp;quot;auto&amp;quot; fill=&amp;quot;black&amp;quot; stroke-dasharray=&amp;quot;none&amp;quot; stroke-width=&amp;quot;1&amp;quot; stroke-linejoin=&amp;quot;miter&amp;quot;  stroke-dashoffset=&amp;quot;0&amp;quot;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;stroke-opacity&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;line x1=&amp;quot;75%&amp;quot; x2=&amp;quot;75%&amp;quot; y2=&amp;quot;100%&amp;quot; stroke=&amp;quot;url(#red)&amp;quot; stroke-width=&amp;quot;50%&amp;quot; stroke-opacity=&amp;quot;0&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;text-decoration&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;20&amp;quot; word-spacing=&amp;quot;0&amp;quot;&amp;gt;&lt;/code&gt;Sample text&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;br&gt;   &lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;45&amp;quot; text-decoration=&amp;quot;underline&amp;quot;&amp;gt;&lt;/code&gt;text-decoration underline&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;  &lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;70&amp;quot; text-decoration=&amp;quot;line-through&amp;quot;&amp;gt;&lt;/code&gt;text-decoration line-through&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;  &lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;95&amp;quot; text-decoration=&amp;quot;overline&amp;quot;&amp;gt;&lt;/code&gt;text-decoration overline&lt;/text&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;word-spacing&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;20&amp;quot; word-spacing=&amp;quot;0&amp;quot;&amp;gt;&lt;/code&gt;Sample text&lt;code&gt; &amp;lt;/text&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;45&amp;quot; word-spacing=&amp;quot;20&amp;quot;&amp;gt;&lt;/code&gt;Word space 20&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;70&amp;quot; word-spacing=&amp;quot;40&amp;quot;&amp;gt;&lt;/code&gt;Word space 40&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;95&amp;quot; word-spacing=&amp;quot;0&amp;quot;&amp;gt;&lt;/code&gt;Sample text&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;SVG Tag Attribute&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Sample Use&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;transform&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text id=&amp;quot;myScaleTextH&amp;quot; font-family=&amp;quot;sans-serif&amp;quot; fill=&amp;quot;dimgray&amp;quot; font-size=&amp;quot;15px&amp;quot; text-anchor=&amp;quot;middle&amp;quot; transform=&amp;quot;translate(55,36),rotate(90)&amp;quot; &amp;gt;81,000 m&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;cx&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle cx=&amp;quot;100&amp;quot; cy=&amp;quot;50&amp;quot; r=&amp;quot;40&amp;quot; stroke=&amp;quot;green&amp;quot; stroke-width=&amp;quot;2&amp;quot; fill=&amp;quot;magenta&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;cy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle fill=&amp;quot;dimgray&amp;quot; cx=&amp;quot;0&amp;quot; cy=&amp;quot;0&amp;quot; r=&amp;quot;1&amp;quot; pointer-events=&amp;quot;none&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;dx&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;svg xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot;&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;text dx=&amp;quot;㾫&amp;quot;/&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;dy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;tspan dy=&amp;quot;25&amp;quot; x=&amp;quot;25&amp;quot;&amp;gt;fallback to an icc-color or RGB color.&amp;lt;/tspan&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;fill&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;20&amp;quot; fill=&amp;quot;green&amp;quot;&amp;gt;SVG Image 20&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;font-family&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;tspan x=&amp;quot;10&amp;quot; dy=&amp;quot;10&amp;quot; font-family=&amp;quot;serif&amp;quot;&amp;gt;&lt;/code&gt;  &lt;br&gt; Have you gazed on naked grandeur where there&amp;rsquo;s nothing else to gaze on,  &lt;br&gt;&lt;code&gt;&amp;lt;/tspan&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;font-size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text font-family=&amp;quot;sans-serif&amp;quot; fill=&amp;quot;dimgray&amp;quot; font-size=&amp;quot;22px&amp;quot; font-weight=&amp;quot;bold&amp;quot; x=&amp;quot;58&amp;quot; y=&amp;quot;30&amp;quot; pointer-events=&amp;quot;none&amp;quot;&amp;gt;Map Title&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;font-stretch&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;20&amp;quot; font-family=&amp;quot;arial&amp;quot; font-size=&amp;quot;15&amp;quot; fill=&amp;quot;blue&amp;quot; font-stretch=&amp;quot;normal&amp;quot; &amp;gt;&lt;/code&gt;  &lt;br&gt;   font-stretch normal  &lt;br&gt;&lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt;  &lt;br&gt;&lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;40&amp;quot; font-family=&amp;quot;arial&amp;quot; font-size=&amp;quot;15&amp;quot; fill=&amp;quot;blue&amp;quot; font-stretch=&amp;quot;wider&amp;quot; &amp;gt;&lt;/code&gt;  &lt;br&gt;   font-stretch wider  &lt;br&gt;&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;  &lt;br&gt;&lt;br&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;60&amp;quot; font-family=&amp;quot;arial&amp;quot; font-size=&amp;quot;15&amp;quot; fill=&amp;quot;blue&amp;quot; font-stretch=&amp;quot;narrower&amp;quot; &amp;gt;&lt;/code&gt;  &lt;br&gt;    font-stretch narrower  &lt;br&gt;&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;font-style&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;20&amp;quot; y=&amp;quot;40&amp;quot; font-family=&amp;quot;Arial&amp;quot; font-size=&amp;quot;12&amp;quot; font-style=&amp;quot;normal&amp;quot;&amp;gt;&lt;/code&gt;  &lt;br&gt;   Sample text  &lt;br&gt;   &lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;height&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;rect x=&amp;quot;-6&amp;quot; y=&amp;quot;-6&amp;quot; width=&amp;quot;12&amp;quot; height=&amp;quot;12&amp;quot; fill=&amp;quot;white&amp;quot; stroke=&amp;quot;dimgray&amp;quot; stroke-width=&amp;quot;1.5&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;defs&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;text id=&amp;quot;ReferencedText&amp;quot;&amp;gt;&lt;/code&gt;  &lt;br&gt;   Referenced character data  &lt;br&gt;&lt;code&gt;   &amp;lt;/text&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;/defs&amp;gt;&lt;/code&gt;  &lt;br&gt;   &lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;100&amp;quot; font-size=&amp;quot;15&amp;quot; fill=&amp;quot;red&amp;quot; &amp;gt;&lt;/code&gt;  &lt;br&gt; &lt;code&gt;   &amp;lt;tref xlink:href=&amp;quot;#ReferencedText&amp;quot;/&amp;gt;&lt;/code&gt;  &lt;br&gt;&lt;code&gt;&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;points&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;polyline fill=&amp;quot;none&amp;quot; stroke=&amp;quot;dimgray&amp;quot; stroke-width=&amp;quot;1&amp;quot; points=&amp;quot;-3,-6 3,-6 3,1 5,1 0,7 -5,1 -3,1 -3,-5&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle cx=&amp;quot;120&amp;quot; cy=&amp;quot;50&amp;quot; r=&amp;quot;40&amp;quot; stroke=&amp;quot;green&amp;quot; stroke-width=&amp;quot;2&amp;quot; fill=&amp;quot;magenta&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;rx&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;ellipse stroke=&amp;quot;black&amp;quot; stroke-width=&amp;quot;5&amp;quot; cx=&amp;quot;400&amp;quot; cy=&amp;quot;200&amp;quot; rx=&amp;quot;350&amp;quot; ry=&amp;quot;150&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ry&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;rect x=&amp;quot;20&amp;quot; y=&amp;quot;20&amp;quot; rx=&amp;quot;20&amp;quot; ry=&amp;quot;20&amp;quot; width=&amp;quot;250&amp;quot; height=&amp;quot;100&amp;quot; style=&amp;quot;fill:red;stroke:black; stroke-width:5;opacity:0.5&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;style&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;rect x=&amp;quot;20&amp;quot; y=&amp;quot;20&amp;quot; width=&amp;quot;250&amp;quot; height=&amp;quot;250&amp;quot; style=&amp;quot;fill:blue;stroke:red;stroke-width:5; fill-opacity:0.5;stroke-opacity:0.5;&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;transform&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;circle cx=&amp;quot;6cm&amp;quot; cy=&amp;quot;2cm&amp;quot; r=&amp;quot;100&amp;quot; fill=&amp;quot;red&amp;quot; transform=&amp;quot;translate(0,50)&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;width&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;rect style=&amp;quot;stroke:#2aa;stroke-width:7;fill:#ded;opacity:.8&amp;quot; x=&amp;quot;30&amp;quot; y=&amp;quot;80&amp;quot; height=&amp;quot;120&amp;quot; width=&amp;quot;220&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;x&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;20&amp;quot; fill=&amp;quot;green&amp;quot;&amp;gt;SVG Image 20&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;text x=&amp;quot;10&amp;quot; y=&amp;quot;50&amp;quot; fill=&amp;quot;green&amp;quot;&amp;gt;SVG Image 50&amp;lt;/text&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;y1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;line style=&amp;quot;stroke:#eea;stroke-width:8&amp;quot; x1=&amp;quot;10&amp;quot; y1=&amp;quot;30&amp;quot; x2=&amp;quot;260&amp;quot; y2=&amp;quot;100&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;y2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;line x1=&amp;quot;0&amp;quot; y1=&amp;quot;0&amp;quot; x2=&amp;quot;30&amp;quot; y2=&amp;quot;30&amp;quot; style=&amp;quot;stroke:rgb(99,99,99);stroke-width:2&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;convert-svg-file-to-pdf-format-known-issues&#34;&gt;&lt;strong&gt;Convert SVG File to PDF Format Known Issues&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Shorten path strings that not covered by specification but as I checked, rendered in browser fine.&lt;/li&gt;
&lt;li&gt;Elliptical arc segments with transformations evolve complex 2D geometry calculations, require more testing..&lt;/li&gt;
&lt;li&gt;Big SVG files (megabytes size) take more than few seconds to parse, code optimization required.&lt;/li&gt;
&lt;li&gt;Graphical filters API in the Pdf layer was extended recently, this make possible make more full integration of the corresponding SVG layer graphics functions.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;convert-epub-file-to-pdf-format&#34;&gt;&lt;strong&gt;Convert EPUB File to PDF Format&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/epub-to-pdf&#34;&gt;products.aspose.app/pdf/conversion/epub-to-pdf&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;EPUB (short for electronic publication) is a free and open e-book standard from the International Digital Publishing Forum (IDPF). Files have the extension .epub. EPUB is designed for reflowable content, meaning that an EPUB reader can optimize text for a particular display device. EPUB also supports fixed-layout content. The format is intended as a single format that publishers and conversion houses can use in-house, as well as for distribution and sale. It supersedes the Open eBook standard.&lt;/p&gt;
&lt;p&gt;In order to convert EPUB files to PDF format, Aspose.PDF for .NET has a class named EpubLoadOptions which is used to load source EPUB file. After that, the object is passed as an argument to Document object initialization, as it helps the PDF rendering engine to determine the source document&amp;rsquo;s input format. The following code snippet shows the process of converting an EPUB file into PDF format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-EPUBToPDF-EPUBToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-mht-to-pdf-format&#34;&gt;&lt;strong&gt;Convert MHT to PDF Format&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:
&lt;a href=&#34;https://products.aspose.app/pdf/conversion/mht-to-pdf&#34;&gt;products.aspose.app/pdf/conversion/mht-to-pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/mhtml-to-pdf&#34;&gt;products.aspose.app/pdf/conversion/mhtml-to-pdf&lt;/a&gt;
You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;MHTML, short for MIME HTML, is a web page archive format used to combine resources that are typically represented by external links (such as images, Flash animations, Java applets, and audio files) with HTML code into a single file. The content of an MHTML file is encoded as if it were an &lt;a href=&#34;http://en.wikipedia.org/wiki/HTML_e-mail&#34;&gt;HTML email&lt;/a&gt; message, using the MIME type multipart/related. Aspose.PDF for .NET can convert HTML files to PDF format and with the release of Aspose.PDF for .NET 9.0.0, we have introduced a new feature that lets you convert MHT files to PDF format.&lt;/p&gt;
&lt;p&gt;To convert MHT files to PDF, Aspose.PDF has the class MhtLoadOptions used as second argument to the Document(&amp;hellip;) constructor. Please take a look at the following code snippet to accomplish this requirement.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-MHTToPDF-MHTToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-tex-file-to-pdf-format&#34;&gt;&lt;strong&gt;Convert TeX file to PDF format&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/tex-to-pdf&#34;&gt;products.aspose.app/pdf/conversion/tex-to-pdf&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;The LaTeX file format is a text file format with markup in the LaTeX derivative of the TeX family of languages and LaTeX is a derived format of the TeX system. LaTeX (ˈleɪtɛk/ lay-tek or lah-tek) is a document preparation system and document markup language. It is widely used for the communication and publication of scientific documents in many fields, including mathematics, physics, and computer science. It also has a prominent role in the preparation and publication of books and articles that contain complex multilingual materials, such as Sanskrit and Arabic, including critical editions. LaTeX uses the TeX typesetting program for formatting its output, and is itself written in the TeX macro language.&lt;/p&gt;
&lt;p&gt;Aspose.PDF for .NET supports the feature to convert TeX files to PDF format and in order to accomplish this requirement, Aspose.Pdf namespace has a class named LatexLoadOptions which provides the capabilities to load LaTex files and render the output in PDF format using Document class. The following code snippet shows the process of converting LaTex file to PDF format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-TeXToPDF-TeXToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-text-file-to-pdf-format&#34;&gt;&lt;strong&gt;Convert Text File to PDF Format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET provides the capability to convert Text files to PDF format. In this article we demonstrate that how easily and efficiently we can convert a text file to PDF using Aspose.Pdf.&lt;/p&gt;
&lt;p&gt;When you need to convert a Text file to PDF, initially read the source text file in some reader. We used TextReader for the purpose. Instantiate Documnet object and add a new page in Pages collection. Create a new object of TextFragment and pass TextReader object to its constructor. Add a new paragraph in Paragraphs collection using TextFragment object and save the resultant PDF file using Save method of Document class.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-TextToPDF-TextToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-cgm-file-to-pdf-format&#34;&gt;&lt;strong&gt;Convert CGM file to PDF format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;CGM is a file extension for a computer graphics metafile file format commonly used in CAD (computer-aided design) and presentation graphics applications. CGM is a vector graphics format that supports three different encoding methods: binary (best for program read speed), character-based (produces the smallest file size and allows for faster data transfers) or cleartext encoding (allows users to read and modify the file with a text editor)&lt;/p&gt;
&lt;p&gt;CGM is an ANSI (American National Standards Institute) standard format that can be used on any operating system that supports it (unlike the WMF format which is designed only for Windows).&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;CgmLoadOptions&lt;/strong&gt; class provides the capabilities to load CGM image and convert it to PDF format. Please try using following code snippet.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-CGMToPDF-CGMToPDF.cs&#34;&gt;&lt;/script&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

You may consider having a look over attached &lt;a href=&#34;&#34;&gt;ISO 8632-3 - Binary encoding.pdf&lt;/a&gt; which details CGM specifications.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert HTML to PDF</title>
      <link>https://docs.aspose.com/pdf/net/convert-html-to-pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-html-to-pdf/</guid>
      <description>
        
        
        &lt;p&gt;Aspose.PDF for .NET lets you convert HTML pages to PDF format with the ability of &amp;ldquo;Resource Loading Callback&amp;rdquo; during conversion. This ability can be useful when loading external resources inside cloud services without access to local file system.&lt;/p&gt;
&lt;h2 id=&#34;html-to-pdf-conversion-in-c&#34;&gt;&lt;strong&gt;HTML to PDF Conversion in C#&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To accomplish this feature, the CustomLoaderOfExternalResources property was added to the HtmlSaveOptions object. The following code snippet replaces pictures referenced in the HTML with a predefined picture.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-HTMLToPDF-HTMLToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-HTMLToPDF-HTMLToPDFHelper.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;provide-credentials-during-html-to-pdf-conversion&#34;&gt;&lt;strong&gt;Provide credentials during HTML to PDF conversion&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Sometimes we need to perform the conversion of HTML files which require authentication and access privileges, so that only authentic users can fetch the page contents. It also includes the scenario where some resources/data referenced inside HTML are fetched from some external server which requires authentication and in order to cater to this requirement, the &lt;strong&gt;ExternalResourcesCredentials&lt;/strong&gt; property is added to &lt;strong&gt;HtmlLoadOptions&lt;/strong&gt; class. Following code snippet shows the steps to pass credentials to request HTML &amp;amp; its respective resources while converting HTML file to PDF conversion.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-ProvideCredentialsDuringHTMLToPDF-ProvideCredentialsDuringHTMLToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-web-page-to-pdf&#34;&gt;&lt;strong&gt;Convert Web Page to PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;HtmlLoadOptions&lt;/strong&gt; option offers the feature to load HTML contents and parse the HTML tags accordingly so that they are rendered respectively inside the resultant PDF. In order to convert Web page contents to PDF format, we can first fetch the HTML page contents using &lt;strong&gt;WebRequest&lt;/strong&gt; instance, create &lt;strong&gt;StreamReader&lt;/strong&gt; object and read page contents. Finally, pass the contents to the Document object and render the output in PDF format.&lt;/p&gt;
&lt;p&gt;When converting a web page hosted on a webserver to PDF:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Read the contents of the page using an HttpWebRequest object.&lt;/li&gt;
&lt;li&gt;Pass the content to a StreamReader object.&lt;/li&gt;
&lt;li&gt;Create an instance of MemoryStream.&lt;/li&gt;
&lt;li&gt;Instantiate the HtmlLoadOptions object while passing the web page URL.&lt;/li&gt;
&lt;li&gt;Initialize a Document object while passing the stream object.&lt;/li&gt;
&lt;li&gt;Optionally, set the page orientation to Landscape so that more content can be accommodated on the page.&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

The following feature is under development and might produce undesirable results for complex scenarios. If you face any problem, please report the issue in &lt;a href=&#34;https://forum.aspose.com/c/pdf&#34;&gt;Aspose.PDF product free support forum&lt;/a&gt;&lt;a href=&#34;http://www.aspose.com/community/forums/aspose.pdf-product-family/20/showforum.aspx&#34;&gt;.&lt;/a&gt;
&lt;/div&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-WebPageToPDF-WebPageToPDF.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;render-all-content-in-single-page&#34;&gt;&lt;strong&gt;Render all Content in Single Page&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET provides the ability to render all contents on a single page while converting HTML file to PDF format. For example, if you have some HTML content which output size is greater than one page, you can use option for rendering output data into a single PDF page. For using this option &lt;strong&gt;HtmlLoadOptions&lt;/strong&gt; class was extended by &lt;strong&gt;IsRenderToSinglePage&lt;/strong&gt; flag. The code snippet below shows how to use this functionality.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-HTMLToPDF-RenderContentToSamePage.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;render-html-with-svg-data&#34;&gt;&lt;strong&gt;Render HTML with SVG Data&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET provides ability to convert HTML page to PDF document. Since HTML allows adding SVG graphic element as a tag in the page, Aspose.PDF also supports conversion of such data into the resultant PDF file. The following code snippet shows how to convert HTML files with SVG graphic tags to Tagged PDF Documents.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-HTMLToPDF-RenderHTMLwithSVGData.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert Markdown to PDF</title>
      <link>https://docs.aspose.com/pdf/net/convert-markdown-to-pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-markdown-to-pdf/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

This feature is supported by version 19.6 or greater.
&lt;/div&gt;

&lt;h2 id=&#34;convert-markdown-to-pdf&#34;&gt;&lt;strong&gt;Convert Markdown to PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET  provides the functionality to create a PDF document based on input Markdown data file. In order to convert the markdown to PDF, you need to initialize the Document using &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/mdloadoptions&#34;&gt;MdLoadOptions&lt;/a&gt;. The following code snippet shows how to use this functionality:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-MarkdownToPDF-1.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert PDF-A to PDF</title>
      <link>https://docs.aspose.com/pdf/net/convert-pdf-a-to-pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-pdf-a-to-pdf/</guid>
      <description>
        
        
        &lt;p&gt;Aspose.PDF for .NET provides the feature to transform PDF files to PDF/A compliant format and similarly, it also offers the feature to convert PDF/A file to PDF format.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Please note we follow Adobe Preflight for validating PDF/A conformance. All tools on the market have their own &amp;ldquo;representation&amp;rdquo; of PDF/A conformance. Please check this article on &lt;a href=&#34;http://wiki.opf-labs.org/display/SPR/PDFA+Validation+tools+give+different+results&#34;&gt;PDF/A validation tools&lt;/a&gt; for reference. We chose Adobe products for verifying how Aspose.PDF produces PDF files because Adobe is at the center of everything connected to PDF.
&lt;/div&gt;

&lt;h2 id=&#34;convert-pdf-a-to-pdf&#34;&gt;&lt;strong&gt;Convert PDF-A to PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In order to perform the conversion, the PDF compliance information is removed from input/source file using RemovePdfaCompliance(..) method of Document object.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFAToPDF-PDFAToPDF.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: PDF to HTML - Basics of Conversion</title>
      <link>https://docs.aspose.com/pdf/net/pdf-to-html-basics-of-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/pdf-to-html-basics-of-conversion/</guid>
      <description>
        
        
        &lt;h2 id=&#34;pdf-to-html---basics-of-conversion&#34;&gt;&lt;strong&gt;PDF to HTML - Basics of Conversion&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET provides many features for converting various file formats into PDF documents and converting PDF files into various output formats. This article discusses how to convert a PDF file into HTML. Aspose.PDF for .NET provides the capability to &lt;a href=&#34;&#34;&gt;convert HTML files into PDF format using the InLineHtml approach&lt;/a&gt;. We have had many requests for functionality that converts a PDF file into HTML format and have provided this feature. Please note that this feature also supports XHTML 1.0.&lt;/p&gt;
&lt;h3 id=&#34;convert-pdf-to-html&#34;&gt;&lt;strong&gt;Convert PDF to HTML&lt;/strong&gt;&lt;/h3&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/pdf-to-html&#34;&gt;products.aspose.app/pdf/conversion/pdf-to-html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Aspose.PDF for .NET provides a two-line code for transforming a source PDF file to HTML. The &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/saveformat&#34;&gt;SaveFormat&lt;/a&gt; enumeration contains the value &lt;strong&gt;.Html&lt;/strong&gt; which lets you save the source file to HTML. The following code snippet shows the process of converting a PDF file into HTML.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-PDFToHTML.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;splitting-output-to-multi-page-html&#34;&gt;&lt;strong&gt;Splitting Output to Multi-page HTML&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;When converting large PDF file with several pages to HTML format, the output appears as a single HTML page. It can end up being very long. To control page size, it is possible to split the output into several pages during PDF to HTML conversion. Please try using the following code snippet.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-MultiPageHTML.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;specify-folder-for-storing-svg-files&#34;&gt;&lt;strong&gt;Specify Folder for Storing SVG Files&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;During PDF to HTML conversion, it is possible to specify the folder that SVG images should be saved to. Use the HtmlSaveOption class&amp;rsquo; SpecialFolderForSvgImages property to specify a special SVG image directory. This property gets or sets the path to the directory to which SVG images must be saved to when encountered during conversion. If the parameter is empty or null, then any SVG files are saved together with other image files.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-SaveSVGFiles.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;compressing-svg-images-during-conversion&#34;&gt;&lt;strong&gt;Compressing SVG Images During Conversion&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;To compress SVG images during PDF to HTML conversion, please try using the following code:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-CompressSVGImages.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;specifying-the-images-folder&#34;&gt;&lt;strong&gt;Specifying the Images Folder&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;We can also specify the folder that images will be saved to during PDF to HTML conversion:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-SpecifyingImageFolder.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;create-subsequent-files-with-body-contents-only&#34;&gt;&lt;strong&gt;Create Subsequent Files with Body Contents Only&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Recently, we were asked to introduce a feature where PDF files are converted to HTML and the user can get only the contents of the &lt;body&gt; tag for each page. This would produce one file with CSS, &lt;html&gt;, &lt;head&gt; details and all pages in other files just with &lt;body&gt; contents.&lt;/p&gt;
&lt;p&gt;To meet this requirement, a new property, HtmlMarkupGenerationMode, was introduced to the HtmlSaveOptions class.&lt;/p&gt;
&lt;p&gt;With the following simple code snippet, you can split the output HTML into pages. In the output pages, all HTML objects must go exactly where they go now (fonts processing and output, CSS creation and output, images creation and output), except that the output HTML will contain contents currently placed inside the &lt;body&gt;&lt;/body&gt; tags (now &amp;ldquo;body&amp;rdquo; tags will be omitted). However, when using this approach, the link to the CSS is the responsibility of your code, because things like &lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;35951_7_Csses\css_style.css&#34; /&gt; will be stripped out. For this purpose, you may read the CSS via File.ReadAllText() and send it via AJAX to to a web page where it will be applied by jQuery.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-CreateSubsequentFiles.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;transparent-text-rendering&#34;&gt;&lt;strong&gt;Transparent Text rendering&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;In case the source/input PDF file contains transparent texts shadowed by foreground images, then there might be text rendering issues. So in order to cater such scenarios, SaveShadowedTextsAsTransparentTexts and SaveTransparentTexts properties can be used.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-TransparentTextRendering.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;pdf-document-layers-rendering&#34;&gt;&lt;strong&gt;PDF document layers rendering&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;We can render PDF document layers in separate layer type element during PDF to HTML conversion:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-LayersRendering.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert PDF File into HTML Format</title>
      <link>https://docs.aspose.com/pdf/net/convert-pdf-file-into-html-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-pdf-file-into-html-format/</guid>
      <description>
        
        
        &lt;h2 id=&#34;pdf-to-html---save-images-in-raster-format&#34;&gt;&lt;strong&gt;PDF to HTML - Save Images in Raster Format&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/pdf-to-html&#34;&gt;products.aspose.app/pdf/conversion/pdf-to-html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;The default output format for saving images when converting from PDF to HTML, is SVG. It is possible to over-ride the default and instead save images to a raster format. This article shows how.
Aspose.PDF for .NET provides great conversion options and can convert PDF files to DOC, DOCX, image, HTML and various other formats. During the PDF to HTML conversion process, images in the PDF are saved with SVG compression by default. You can save them in raster format (PNG or JPEG) to reduce the image size.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SaveImages-SaveImages.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---split-css-to-pages&#34;&gt;&lt;strong&gt;PDF to HTML - Split CSS to Pages&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;When converting PDF files to HTML, a CSS file containing formatting information is created. Aspose.PDF for .NET also offers the feature to split the output HTML into pages and you can also split the CSS into multiple pages.&lt;/p&gt;
&lt;p&gt;The HtmlSaveOptions class has a property named SplitIntoPages which supports the feature to split the output HTML file to pages when generating it. One of our customers wanted to split the CSS file based on individual pages instead of generating a single CSS file. To accomplish this, we introduced a new flag, SplitCssIntoPages to the HtmlSaveOptions class. When the value of this property is set to true, the converter splits the outout CSS into parts/pages based on individual HTML pages created. The following code snippet shows how to use the flag.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SplitCSSToPages-SplitCSSToPages.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SplitCSSToPages-SplitCSSToPagesHelpers.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;csssavinginfohtmlpagenumber-has-been-renamed-csssavinginfocssnumber&#34;&gt;&lt;strong&gt;CssSavingInfo.HtmlPageNumber has been Renamed CssSavingInfo.CssNumber&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Instances of HtmlSaveOptions.CssSavingInfo are usually used in custom implementations of HtmlSaveOptions.CssSavingStrategy when it&amp;rsquo;s necessary to implement custom saving of CSS files generated during PDF to HTML conversion. It contains any parameters and content of the saved CSS.&lt;/p&gt;
&lt;p&gt;Prior to version 9.0.0 CssSavingInfo.HtmlPageNumber was used in the public API. It was introduced when the number of saved CSS files and HTML pages was always equal. Now, the internal logic of the converter has been changed: it&amp;rsquo;s possible to have a different number of HTML pages and saved CSS files. For internal reasons this parameter can contain only the number of CSS, not the number of parent HTML page. To reflect this, it was renamed CssSavingInfo.CssNumber.&lt;/p&gt;
&lt;p&gt;In essence it&amp;rsquo;s just an informational parameter that can be used to get the ordinal of the currently saved CSS-file.&lt;/p&gt;
&lt;h3 id=&#34;public-api-changes&#34;&gt;&lt;strong&gt;Public API Changes&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;CssSavingInfo.&lt;strong&gt;HtmlPageNumber&lt;/strong&gt; has been renamed CssSavingInfo.&lt;strong&gt;CssNumber&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdf-to-html---save-fonts-as-woff-or-ttf&#34;&gt;&lt;strong&gt;PDF to HTML - Save Fonts as WOFF or TTF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET offers the feature to convert HTML files to PDF format and transforming PDF files to HTML. During PDF to HTML conversion, the TrueType fonts used in the PDF can be &lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-file-into-html-format/&#34;&gt;saved on the file system&lt;/a&gt;. To ensure maximum browser compatibility, it&amp;rsquo;s possible to embed &lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-file-into-html-format/&#34;&gt;several font types&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;generating-tiff-or-woff-fonts&#34;&gt;&lt;strong&gt;Generating TIFF or WOFF Fonts&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;From Aspose.PDF for .NET 8.8.0, it is possible to either save fonts in TTF (TrueType Format) or WOFF (Web Open Font Format) formats. To accomplish this requirement, the HtmlSaveOptions.FontSavingModes enumerator and HtmlSaveOptions.FontSavingMode conversion option have been added. The following code snippet lets you save fonts as TTF when converting PDF files to HTML format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SaveFonts-SaveFonts.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;To save fonts in WOFF format, use the following code:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SaveFonts-WOFFFormat.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;generate-3-sets-of-fonts&#34;&gt;&lt;strong&gt;Generate 3 Sets of Fonts&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Prior to the release of Aspose.PDF for .NET 9.3.0, the API supported saving fonts either as WOFF or TTF. This meant that fonts could not be loaded in Internet Explorer 6 through 8, so documents didn&amp;rsquo;t look right when viewed in these browsers. Also for mobile browsers, the TTF fonts were required for maximum compatibility. The solution was to generate 3 sets of fonts, to ensure maximum browser compatibility, and then reference all fonts in the CSS as shown below. The following format is similar to the one described &lt;a href=&#34;http://css-tricks.com/snippets/css/using-font-face/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;face&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;

	&lt;span style=&#34;color:#000&#34;&gt;font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;family&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;WBULFR+Arial-BoldMT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f57900&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;	src:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;fa507958-0001-0000-0000-000000000000.eot&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#f57900&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;	src:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;fa507958-0001-0000-0000-000000000000.eot?#iefix&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;embedded-opentype&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;),&lt;/span&gt;

	&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;fa507958-0001-0000-0000-000000000000.woff&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;woff&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;),&lt;/span&gt;

	&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;fa507958-0001-0000-0000-000000000000.ttf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;truetype&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To accomplish this requirement, the SaveInAllFormats font saving mode was introduced to the HtmlSaveOptions.FontSavingModes enumeration. The following code snippet demonstrates how to generate 3 sets of fonts.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SaveFonts-ThreeSetFonts.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---specify-prefix-for-image&#34;&gt;&lt;strong&gt;PDF to HTML - Specify Prefix for Image&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;When converting PDFs to HTML, it is possible to specify a prefix for image files. Images are created with the name &lt;strong&gt;img_01&lt;/strong&gt; (increased by one for each new image). The following code snippet demonstrates how to specify the prefix for image files.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SpecifyPrefixForImages-SpecifyPrefixForImages.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SpecifyPrefixForImages-SpecifyPrefixForImagesHelper.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---set-prefix-for-urls-of-svg-files&#34;&gt;&lt;strong&gt;PDF to HTML - Set Prefix for URLs of SVG Files&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;During PDF to HTML conversion, the images inside the PDF file are saved to SVG. The images are created in a folder that contain the HTML page resources and are referenced from that same folder. Some of our customers have asked to add a prefix for URLs in the SVG files that Aspose.PDF generate when convertinig PDF to HTML.&lt;/p&gt;
&lt;p&gt;Prior to &lt;a href=&#34;http://www.aspose.com/community/files/51/.net-components/aspose.pdf-for-.net/entry525304.aspx&#34;&gt;Aspose.PDF for .NET 8.9.0&lt;/a&gt;, when converting the PDF file to HTML format, images were referenced in the following manner:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;xlink&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;img_01.png&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;temp_href&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;img_01.png&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1351&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2135&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In later versions, the URL for image can be specified:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;xlink&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://localhost:255/img_01.png&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;temp_href&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://localhost:255/img_01.png&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1351&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2135&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;ImageParentTypes&lt;/strong&gt; enumeration has been added to the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/htmlsaveoptions&#34;&gt;HtmlSaveOptions&lt;/a&gt; class.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;ParentType&lt;/strong&gt; property was added into the HtmlSaveOptions.HtmlImageSavingInfo class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above stated requirement can be achieved with custom image saving strategy, as specified below.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-PrefixForURLs-PrefixForURLs.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-PrefixForURLs-PrefixForURLsHelper.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---set-url-prefix-for-fonts-in-stylecss&#34;&gt;&lt;strong&gt;PDF to HTML - Set URL Prefix for Fonts in style.css&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET offers the feature to convert HTML files to PDF and transforming PDF files to HTML. During PDF to HTML conversion, the TrueType fonts used in the PDF are saved on the file system.&lt;/p&gt;
&lt;p&gt;Prior to &lt;a href=&#34;http://www.aspose.com/community/files/51/.net-components/aspose.pdf-for-.net/entry525304.aspx&#34;&gt;Aspose.PDF for .NET 8.9.0&lt;/a&gt;, developers were unable to set a URL prefix for fonts in the style.css file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;face&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;family&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CMBRVA+Ebrima,Bold&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f57900&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;src:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;d724b65b-0001-0000-0000-000000000000.ttf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some wanted to set the prefix for fonts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;face&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;family&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CMBRVA+Ebrima,Bold&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f57900&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;src:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://localhost:255/document-viewer/GetFont/01.ttf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is now possible to set a custom URL for fonts using custom resource saving strategies.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

You can also set a prefix for font names and make the names shorter
&lt;/div&gt;
 
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-PrefixForFonts-PrefixForFonts.cs&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-PrefixForFonts-PrefixForFontsHelper.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---prefix-css-class-names-in-stylecss&#34;&gt;&lt;strong&gt;PDF to HTML - Prefix CSS Class Names in style.css&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;When converting PDF files to HTML format, Aspose.PDF creates a CSS file that contains formatting information. Aspose.PDF for .NET offers the feature to split the HTML into pages, so you can also split the CSS into multiple pages. This feature also provides the capability to prefix CSS class names in the style.css file.&lt;/p&gt;
&lt;p&gt;We were asked to for a feature that would make it possible to prefix CSS class names in the style.css file.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Instead of  &lt;code&gt;.stl_06 {}&lt;/code&gt; &lt;br&gt; 
it should be  &lt;code&gt;.gDV__ .stl_06 {&lt;/code&gt;
&lt;/div&gt;

&lt;p&gt;To accomplish this requirement, the HtmlSaveOptions.CssClassNamesPrefix field has been introduced.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-PrefixCSSClassNames-PrefixCSSClassNames.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---add-a-prefix-to-import-directives&#34;&gt;&lt;strong&gt;PDF to HTML - Add a Prefix to Import Directives&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET supports the feature to convert PDF files to HTML format. During the conversion process, formatting information is saved in the style.css file. The style.css file is referenced in the output HTML file.&lt;/p&gt;
&lt;p&gt;We were asked to add a prefix to import directives like this @import &amp;lsquo;style1p1.css&amp;rsquo;; in the style.css file. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;://&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;localhost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;24661&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;document&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;viewer&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GetResourceForHtmlHandler&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;documentPath&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Deutschland201207Arbeit&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;pdf&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;resourcePath&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;style1p1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;css&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fileNameOnly&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code below shows how to perform this task.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-PrefixToImportDirectives-PrefixToImportDirectives.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-PrefixToImportDirectives-PrefixToImportDirectivesHelper.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;After executing of the above code, open the style.css file and ensure that it starts with CSS-import directives and contains something like the below (the exact paths will differ if you can change them in the code snippet when running on your machine):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//F:/ExternalTestsData/36435_1_files/style_page_1_part_1.css&amp;#39;;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//F:/ExternalTestsData/36435_1_files/style_page_1_part_2.css&amp;#39;;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//F:/ExternalTestsData/36435_1_files/style_page_1_part_3.css&amp;#39;;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//F:/ExternalTestsData/36435_1_files/style_page_1_part_4.css&amp;#39;;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//F:/ExternalTestsData/36435_1_files/style_page_1_part_5.css&amp;#39;;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//F:/ExternalTestsData/36435_1_files/style_page_1_part_6.css&amp;#39;;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//F:/ExternalTestsData/36435_1_files/style_page_1_part_7.css&amp;#39;;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@import&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;://&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ExternalTestsData&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;36435_1_files&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;style_page_1_part_8&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;css&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;pdf-to-html---save-output-to-a-stream-object&#34;&gt;&lt;strong&gt;PDF to HTML - Save Output to a Stream Object&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET 9.0.0 introduced a feature for converting PDF files to HTML format and save the output in a Stream object.&lt;/p&gt;
&lt;p&gt;Please notice that using a stream as a target leads to some natural limitations required by the instance of the HtmlSaveOptions class that must be supplied for such conversion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Because it&amp;rsquo;s necessary to explicitly process external parts (like CSS, images, fonts) in custom code, an instance of HtmlSaveOptions with explicitly set custom strategies should be supplied:
&lt;ul&gt;
&lt;li&gt;HtmlSaveOptions.CustomResourceSavingStrategy&lt;/li&gt;
&lt;li&gt;HtmlSaveOptions.CustomCssSavingStrategy&lt;/li&gt;
&lt;li&gt;HtmlSaveOptions.CustomStrategyOfCssUrlCreation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Setting HtmlSaveOptions.SplitCssIntoPages, and HtmlSaveOptions.SplitIntoPages does not make sense in this case and must be set to false (the default values).&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

If saving the output to stream is necessary, please use something similar to the following code. (The snippet is meant to be placed inside a simple console application.) Remember that saving linked external parts (fonts, CSS, and images) and supplying correct URLS and URL-templates to be used during output generation, are the responsibility of the custom code. Feel free to use this snippet as a basis for writing your own implementation.
&lt;/div&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-OutPutToStream-OutPutToStreamHelper.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;save-output-html-to-a-single-stream-with-embedded-resources&#34;&gt;&lt;strong&gt;Save output HTML to a single stream with embedded resources&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;If it is required to embed all resources (CSS, Fonts, Images) into a single HTML stream, you may use following code sample. It tunes conversion in such way that all output forced to be embedded into result HTML without external files, and then result HTML is written into some stream with code of custom strategy of saving of HTML.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-OutPutToStream-OutPutToStream.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-OutPutToStream-SavingToStream.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---progress-detail-of-conversion&#34;&gt;&lt;strong&gt;PDF to HTML - Progress Detail of Conversion&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;If the source PDF file is quite large, then during conversion process, you might want to measure/determine the progress of the conversion progress. This information can be useful when you need to show some status to the end user regarding conversion process.&lt;/p&gt;
&lt;p&gt;Add progress events or be able to pass in a callback function which gets updated with progress details, when generating all resource types in order to allow progress updates be returned so that we can let a customer know how much processing of resources is performed / how many pages are processed.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;Public API Changes&lt;/strong&gt; 
Aspose.PDF for .NET 9.1.0 introduced the property CustomProgressHandler in HtmlSaveOptions.
That release also added the following types used in that handler:
HtmlSaveOptions.ConversionProgessEventHandler
HtmlSaveOptions.ProgressEventHandlerInfo
HtmlSaveOptions.ProgressEventType
&lt;/div&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-ProgressDetails-ProgressDetails.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-ProgressDetails-ProgressDetailsHelper.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---avoid-saving-images-in-svg-format&#34;&gt;&lt;strong&gt;PDF to HTML - Avoid Saving Images in SVG Format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The default output format for saving images when converting from PDF to HTML is SVG. During conversion, some images from PDF are transformed into SVG vector images. This could be slow. Instead, the images could be transformed into PNG. To allow this, Aspose.PDF has the option to use SVG for vectors or to create PNGs. In order to completely remove the rendering of images as SVG format when converting PDF files to HTML format, please try using the following code snippet.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;Public API Changes&lt;/strong&gt; 
Aspose.PDF for .NET 9.1.0 introduced a new member of the HtmlSaveOptions.RasterImagesSavingModes enumeration:
HtmlSaveOptions.RasterImagesSavingModes.AsEmbeddedPartsOfPngPageBackground
It allows you to completely avoid converting images to SVG in output HTML files.
&lt;/div&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-AvoidSavingImages-AvoidSavingImages.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---save-html-css-image-and-font-resources-in-stream-object&#34;&gt;&lt;strong&gt;PDF to HTML - Save HTML, CSS, Image, and Font Resources in Stream Object&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;During PDF to HTML conversion, fonts, images and CSS files containing style information for the PDF contents are generated. These resources are necessary to maintain the formatting of the output HTML file. However, there might be a scenario where you want to load a PDF file Stream object and do not need to store or save the resource files on the system or local drive. The can be the case if you do not have permissions for saving intermediate resource files or do not want to save the resources on the system and simply need to perform the conversion on the fly (and the file needs to be viewed once and is not required for later processing).&lt;/p&gt;
&lt;p&gt;The following code snippet can be used to save all parts of result HTML-set of files into streams without saving them to disk. The point is: supply a non-existing path to the output HTML file and implement custom processing of all resources (HTML markup, CSS, images and fonts). This code is supposed to be put in simple console application.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SaveHTMLImageCSS-SaveHTMLImageCSS.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SaveHTMLImageCSS-SaveHTMLImageCSSHelper.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---single-html-with-all-resources-embedded&#34;&gt;&lt;strong&gt;PDF to HTML - Single HTML with All Resources Embedded&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;PDF to HTML conversion is one of the most powerful features of Aspose.PDF for Java as it allows the production of high fidelity HTML documents. During conversion, all the resources (fonts, images and CSS) from PDF file are saved in a separate folder in same directory that the output HTML is created. However, we were asked to provide a feature for converting a PDF file to HTML format and generate a single HTML file with all resources embedded. The implementation of this feature is in accordance with &lt;a href=&#34;http://en.wikipedia.org/wiki/Data_URI_scheme&#34;&gt;data URI scheme&lt;/a&gt;. To accomplish it, the value EmbedAllIntoHtml was added to the HtmlSaveOptions.PartsEmbeddingModes enumeration. The following code snippet shows how to use it.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

To only embed CSS in the output HTML, and not all resources, use the EmbedCssOnly value of the HtmlSaveOptions.PartsEmbeddingModes enumeration.
&lt;/div&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SingleHTML-SingleHTML.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SetOutputFileDimensions-SetOutputFileDimensions.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---set-output-file-dimensions&#34;&gt;&lt;strong&gt;PDF to HTML - Set Output File Dimensions&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;When converting a PDF file to HTML format, the output file is saved with the same dimensions as the input PDF document. However, sometimes, you need to generate output HTML with specific dimensions. Use the Aspose.PDF.Facades.PdfPageEditor and HtmlSaveOptions classes to fulfill this requirement.&lt;/p&gt;
&lt;p&gt;The PdfPageEditor class in the Aspose.PDF.Facades namespace provides the feature to update or manipulate pages in a PDF document. It also offers the feature to set or update page dimensions of an input PDF file. To set specific dimensions when converting to HTML:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load the source PDF document into the PdfPageEditor object.&lt;/li&gt;
&lt;li&gt;Update the page dimensions.&lt;/li&gt;
&lt;li&gt;Render the output to HTML format using the HtmlSaveOptions class.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following code snippet shows the steps to convert PDF file HTML format and specify dimensions for the output file.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTMLFormat-SetOutputFileDimensions-SetOutputFileDimensions.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html---exclude-font-resources&#34;&gt;&lt;strong&gt;PDF to HTML - Exclude Font Resources&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET offers the feature to convert HTML files to PDF format and transforming PDF files to HTML. When converting PDFs to HTML, it is possible to specify options that will allow preventing exporting fonts resources. For these feature &lt;strong&gt;HtmlSaveOptions&lt;/strong&gt; class was extended with two properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HtmlSaveOptions.FontSavingModes.DontSave&lt;/strong&gt; - is to prevent exporting all the fonts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ExcludeFontNameList&lt;/strong&gt; - is for prevent exporting specific fonts(please specify font names without hash)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The current property provided as a list of strings. The code snippet below shows how to use this functionality.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-ExcludeFontResources.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;pdf-to-html-with-full-content-width&#34;&gt;&lt;strong&gt;PDF to HTML  with Full Content Width&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;During conversion of PDF to HTML, there may arise a need of setting content width to 100% in output HTML whereas HTML content is left-aligned. The FlowLayoutParagraphFullWidth property of HtmlSaveOptions class lets you achieve this as shown in the following code sample.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-CreatingHtmlWithFullContentWidth.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;center-align-output-html-contents&#34;&gt;&lt;strong&gt;Center Align Output HTML Contents&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In case you want to center align the contents of output HTML, you can use the &lt;em&gt;PageMarginIfAny&lt;/em&gt; to set margin of each side of HTML page as shown in the following code sample.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToHTML-CenterAlignText.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert PDF file to other Formats</title>
      <link>https://docs.aspose.com/pdf/net/convert-pdf-file-to-other-formats/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-pdf-file-to-other-formats/</guid>
      <description>
        
        
        &lt;h2 id=&#34;convert-pdf-file-to-other-formats&#34;&gt;&lt;strong&gt;Convert PDF file to other Formats&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;convert-pdf-file-to-pdf-a&#34;&gt;&lt;strong&gt;Convert PDF File to PDF-A&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Aspose.PDF allows you to convert a PDF file to a PDF/A compliant PDF file. Before doing so, the file must be validated. This topic explains how.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Please note we follow Adobe Preflight for validating PDF/A conformance. All tools on the market have their own &amp;ldquo;representation&amp;rdquo; of PDF/A conformance. Please check this article on &lt;a href=&#34;http://wiki.opf-labs.org/display/SPR/PDFA+Validation+tools+give+different+results&#34;&gt;PDF/A validation tools&lt;/a&gt; for reference. We chose Adobe products for verifying how Aspose.PDF produces PDF files because Adobe is at the center of everything connected to PDF.
&lt;/div&gt;

&lt;p&gt;Convert the file using the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; class &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document/methods/convert&#34;&gt;Convert&lt;/a&gt; method. Before converting the PDF to PDF/A compliant file, validate the PDF using the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document/methods/validate&#34;&gt;Validate&lt;/a&gt; method. The validation result is stored in an XML file and then this result is also passed to the &lt;a href=&#34;http://www.aspose.com/api/net/pdf/aspose.pdf/document/methods/convert/index&#34;&gt;Convert&lt;/a&gt; method. You can also specify the action for the elements which cannot be converted using the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/converterroraction&#34;&gt;ConvertErrorAction&lt;/a&gt; enumeration.&lt;/p&gt;
&lt;h3 id=&#34;convert-pdf-file-to-pdfa-1b&#34;&gt;&lt;strong&gt;Convert PDF file to PDF/A-1b&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet shows how to convert PDF files to PDF/A-1b compliant PDF.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToPDFA-PDFToPDFA.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;To perform validation only, use the following line of code:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Working-Document-ValidatePDFABStandard-ValidatePDFABStandard.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;convert-pdf-file-to-pdfa-3b&#34;&gt;&lt;strong&gt;Convert PDF file to PDF/A-3b&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Aspose.PDF for .NET also supports the feature to convert a PDF file to PDF/A-3b format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToPDFA3b-PDFToPDFA3b.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;convert-pdf-file-to-pdfa-2u&#34;&gt;&lt;strong&gt;Convert PDF file to PDF/A-2u&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Aspose.PDF for .NET also supports the feature to convert a PDF file to PDF/A-2u format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;inFile&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;input.pdf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;outFile&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;output.pdf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Document&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;doc&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Document&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inFile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Convert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MemoryStream&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PdfFormat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PDF_A_2U&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ConvertErrorAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Delete&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;outFile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;convert-pdf-file-to-pdfa-3u&#34;&gt;&lt;strong&gt;Convert PDF file to PDF/A-3u&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Aspose.PDF for .NET also supports the feature to convert a PDF file to PDF/A-3u format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;inFile&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;input.pdf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;outFile&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;output.pdf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Document&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;doc&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Document&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inFile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Convert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MemoryStream&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PdfFormat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PDF_A_3U&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ConvertErrorAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Delete&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;outFile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;add-attachment-to-pdfa-file&#34;&gt;&lt;strong&gt;Add Attachment to PDF/A file&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;In case you have a requirement to attach files to PDF/A compliance format, then we recommend using &lt;strong&gt;PDF_A_3A&lt;/strong&gt; value from &lt;strong&gt;Aspose.PDF.PdfFormat&lt;/strong&gt; enumeration, as according to &lt;a href=&#34;https://forums.adobe.com/thread/868219&#34;&gt;this post in Adobe community&lt;/a&gt;, PDF/A_3a is the format that provides the feature to attach any file format as an attachment to PDF/A compliant file.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-AddAttachmentToPDFA-AddAttachmentToPDFA.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;replace-missing-fonts-with-alternative-fonts&#34;&gt;&lt;strong&gt;Replace missing fonts with alternative fonts&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;As per PDFA standards, fonts should be embedded in PDFA document. However, if the fonts are not embedded in the source document or exist on the machine then PDFA fails the validation. In this case, we have a requirement to substituent missing fonts with some alternative fonts from the machine. We can substitute missing fonts using the SimpleFontSubsituation method as following during PDF to PDFA conversion.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-ReplaceMissingFonts-ReplaceMissingFonts.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pdf-to-tex-format&#34;&gt;&lt;strong&gt;Convert PDF to TeX Format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The LaTeX file format is a text file format with markup in the LaTeX 2ε derivative of the TeX family of languages and LaTeX is a derived format of the TeX system.&lt;/p&gt;
&lt;p&gt;To convert PDF files to TeX, Aspose.PDF has the class &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/latexsaveoptions&#34;&gt;LaTeXSaveOptions&lt;/a&gt; which provides the property OutDirectoryPath for saving temporary images during the conversion process.&lt;/p&gt;
&lt;p&gt;The following code snippet shows the process of converting PDF files into the TEX format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToTeX-PDFToTeX.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pdf-to-epub-format-in-c&#34;&gt;&lt;strong&gt;Convert PDF to EPUB Format in C#&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;EPUB (short for electronic publication) is a free and open e-book standard from the International Digital Publishing Forum (IDPF). Files have the extension .epub.
EPUB is designed for reflowable content, meaning that an EPUB reader can optimize text for a particular display device. EPUB also supports fixed-layout content. The format is intended as a single format that publishers and conversion houses can use in-house, as well as for distribution and sale. It supersedes the Open eBook standard.&lt;/p&gt;
&lt;p&gt;Aspose.PDF for .NET also supports the feature to convert PDF documents to EPUB format. Aspose.PDF for .NET has a class named EpubSaveOptions which can be used as the second argument to Document.Save(..) method, to generate an EPUB file. Please try using the following code snippet to accomplish this requirement.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToEPUB-PDFToEPUB.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pdf-to-xps-format&#34;&gt;&lt;strong&gt;Convert PDF to XPS Format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The XPS file type is primarily associated with the XML Paper Specification by Microsoft Corporation. The XML Paper Specification (XPS), formerly codenamed Metro and subsuming the Next Generation Print Path (NGPP) marketing concept, is Microsoft&amp;rsquo;s initiative to integrate document creation and viewing into the Windows operating system.&lt;/p&gt;
&lt;p&gt;To convert PDF files to XPS, Aspose.PDF has the class &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/xpssaveoptions&#34;&gt;XpsSaveOptions&lt;/a&gt; that is used as the second argument to the Document.Save(..) constructor to generate the XPS file. The following code snippet shows the process of converting PDF file into XPS format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToXPS-PDFToXPS.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;
&lt;h2 id=&#34;convert-pdf-to-word-doc&#34;&gt;&lt;strong&gt;Convert PDF to Word DOC&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Convert PDF file to DOC format with ease and full control. Aspose.PDF for .NET is flexible and supports a wide variety of conversions. Converting pages from PDF documents to images, for example, is a very popular feature.&lt;/p&gt;
&lt;p&gt;A conversion that many of our customers have requested is PDF to DOC: converting a PDF file to a Microsoft Word document. Customers want this because PDF files cannot easily be edited, whereas Word documents can. Some companies want their users to be able to manipulate text, tables, and images in files that started as PDFs.&lt;/p&gt;
&lt;p&gt;Keeping alive the tradition of making things simple and understandable, Aspose.PDF for .NET lets you transform a source PDF file into a DOC file with two lines of code. To accomplish this feature, we have introduced an enumeration named SaveFormat and its value .Doc lets you save the source file to Microsoft Word format.&lt;/p&gt;
&lt;p&gt;The following code snippet shows the process of converting PDF files into DOC.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToDOC-PDFToDOC.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;using-the-docsaveoptions-class&#34;&gt;&lt;strong&gt;Using the DocSaveOptions Class&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/docsaveoptions&#34;&gt;DocSaveOptions&lt;/a&gt; class provides numerous properties that improve the process of converting PDF files to DOC format. Among these properties, Mode enables you to specify the recognition mode for PDF content. You can specify any value from the RecognitionMode enumeration for this property. Each of these values has specific benefits and limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Textbox mode is fast and good for preserving the original look of the PDF file, but the editability of the resulting document could be limited. Every visually grouped block of text in the original PDF is converted into a textbox in the output document. This achieves a maximal resemblance to the original so the output document looks good, but it consists entirely of textboxes and it could make editing in Microsoft Word quite hard.&lt;/li&gt;
&lt;li&gt;Flow is full recognition mode, where the engine performs grouping and multi-level analysis to restore the original document as per the author&amp;rsquo;s intent while producing an easily editable document. The limitation is that the output document might look different from the original.&lt;/li&gt;
&lt;li&gt;The RelativeHorizontalProximity property can be used to control the relative proximity between textual elements and means that distance is normed by the font size. Larger fonts may have bigger distances between syllables and still be looked at as a single whole. It is specified as a percentage of the font size, for example, 1 = 100%. This means that two characters of 12pt that are placed 12 pt apart are proximal.&lt;/li&gt;
&lt;li&gt;RecognitionBullets is used to switch on the recognition of bullets during conversion.&lt;/li&gt;
&lt;/ul&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToDOC-SaveUsingSaveOptions.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pdf-to-word-docx-in-c&#34;&gt;&lt;strong&gt;Convert PDF to Word DOCX in C#&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET API lets you read and convert PDF documents to &lt;a href=&#34;https://wiki.fileformat.com/word-processing/docx/&#34;&gt;DOCX&lt;/a&gt; using C# and any .NET language. Docx is a well-known format for Microsoft Word documents whose structure was changed from plain binary to a combination of XML and binary files. Docx files can be opened with Word 2007 and lateral versions but not with the earlier versions of MS Word which support DOC file extensions.  &lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/docsaveoptions&#34;&gt;DocSaveOptions&lt;/a&gt; class has a property named Format which provides the capability to specify the format of the resultant document, that is, DOC or DOCX. In order to convert a PDF file to DOCX format, please pass the Docx value from the DocSaveOptions.DocFormat enumeration. Please take a look over the following code snippet which provides the capability to convert PDF file to DOCX format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToDOC-ConvertToDOCX.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pdf-to-svg-format&#34;&gt;&lt;strong&gt;Convert PDF to SVG Format&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Scalable Vector Graphics (SVG) is a family of specifications of an XML-based file format for two-dimensional vector graphics, both static and dynamic (interactive or animated). The SVG specification is an open standard that has been under development by the World Wide Web Consortium (W3C) since 1999.&lt;/p&gt;
&lt;p&gt;SVG images and their behaviors are defined in XML text files. This means that they can be searched, indexed, scripted and if required, compressed. As XML files, SVG images can be created and edited with any text editor, but it is often more convenient to create them with drawing programs such as Inkscape.&lt;/p&gt;
&lt;p&gt;Aspose.PDF for .NET supports the feature to convert SVG image to PDF format and also offers the capability to convert PDF files to SVG format. To accomplish this requirement, the SvgSaveOptions class has been introduced into the Aspose.PDF namespace. Instantiate an object of SvgSaveOptions and pass it as a second argument to the Document.Save(..) method.&lt;/p&gt;
&lt;p&gt;The following code snippet shows the steps for converting a PDF file to SVG format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToSVG-PDFToSVG.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pdf-to-xml&#34;&gt;&lt;strong&gt;Convert PDF to XML&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;With Aspose.PDF for .NET, it is possible to convert PDF documents to XML.&lt;/p&gt;
&lt;h3 id=&#34;schema&#34;&gt;&lt;strong&gt;Schema&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The schema is extended with the ability to use external fonts. Furthermore, when converting PDF files to XML, images are represented as separate files in the same directory as the output XML is created. Fonts are represented as TrueType fonts and the corresponding files (&lt;strong&gt;filename_fontN.ttf&lt;/strong&gt;) are created along with the output XML.&lt;/p&gt;
&lt;p&gt;XML is formed in accordance with the DTD schema specified below:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XML&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;attributeFormDefault&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;unqualified&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;elementFormDefault&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;qualified&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;xmlns&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pdf2xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sequence&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;page&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;maxOccurs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;unbounded&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;minOccurs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sequence&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;font&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;maxOccurs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;unbounded&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;minOccurs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sequence&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;maxOccurs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;unbounded&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;minOccurs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;simpleContent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extension&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;simpleContent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;img&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;minOccurs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;simpleContent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extension&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;simpleContent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sequence&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:float&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;face&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:boolean&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;italic&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:boolean&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bold&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sequence&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:short&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:short&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sequence&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;attribute&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xs:byte&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;complexType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following code snippet shows the process of converting a PDF file to XML (MobiXML) format.&lt;/p&gt;
&lt;p&gt;&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToXML-PDFToXML.cs&#34;&gt;&lt;/script&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;Once the PDF file is converted to XML format, we need to verify that either the conversion is correctly performed or not. In order to cater this requirement, we have created a utility to convert XML contents to XPS format. Please find attached the &lt;strong&gt;AsposeMobiXmlToXpsConverter.zip&lt;/strong&gt; archive which contains &lt;strong&gt;AsposeMobiXmlToXpsConverter.exe&lt;/strong&gt; utility to convert MobiXML file to XPS format. The resultant &lt;strong&gt;.xps&lt;/strong&gt; file can be viewed with any XPS-viewer to ensure that MobiXML files generated with Aspose.PDF for .NET are correct. In attached .zip package, you can find a file &lt;em&gt;start.bat&lt;/em&gt; which contains the path for AsposeMobiXmlToXpsConverter.exe utility and the path of input XML, which is provided as an argument to this utility.&lt;/p&gt;
&lt;p&gt;In case the source PDF contains images, they are represented as separate files (filename_picN.jpg|png) in the directory where output xml is created. Also the fonts are represented as True Type fonts and corresponding files (filename_fontN.ttf) are created along the output XML. Where N is order number (1, 2, &amp;hellip;).&lt;/p&gt;

&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;convert-pdf-a-file-to-pdf&#34;&gt;&lt;strong&gt;Convert PDF-A file to PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET provides the feature to transform PDF files to PDF/A compliant format and similarly, it also offers the feature to convert PDF/A file to PDF format.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Please note we follow Adobe Preflight for validating PDF/A conformance. All tools on the market have their own &amp;ldquo;representation&amp;rdquo; of PDF/A conformance. Please check this article on &lt;a href=&#34;http://wiki.opf-labs.org/display/SPR/PDFA+Validation+tools+give+different+results&#34;&gt;PDF/A validation tools&lt;/a&gt; for reference. We chose Adobe products for verifying how Aspose.PDF produces PDF files because Adobe is at the center of everything connected to PDF.
&lt;/div&gt;

&lt;p&gt;In order to perform the conversion, the PDF compliance information is removed from the input/source file using RemovePdfaCompliance(..) method of the Document object.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFAToPDF-PDFAToPDF.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert PDF to DOC and DOCX</title>
      <link>https://docs.aspose.com/pdf/net/convert-pdf-to-doc-and-docx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-pdf-to-doc-and-docx/</guid>
      <description>
        
        
        &lt;h2 id=&#34;convert-pdf-to-word-doc&#34;&gt;&lt;strong&gt;Convert PDF to Word DOC&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/pdf-to-doc&#34;&gt;products.aspose.app/pdf/conversion/pdf-to-doc&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Convert PDF file to DOC format with ease and full control. Aspose.PDF for .NET is flexible and supports a wide variety of conversions. Converting pages from PDF documents to images, for example, is a very popular feature.&lt;/p&gt;
&lt;p&gt;A conversion that many of our customers have requested is PDF to DOC: converting a PDF file to a Microsoft Word document. Customers want this because PDF files cannot easily be edited, whereas Word documents can. Some companies want their users to be able to manipulate text, tables and images in files that started as PDFs.&lt;/p&gt;
&lt;p&gt;Keeping alive the tradition of making things simple and understandable, Aspose.PDF for .NET lets you transform a source PDF file into a DOC file with two lines of code. To accomplish this feature, we have introduced an enumeration named SaveFormat and its value .Doc lets you save the source file to Microsoft Word format.&lt;/p&gt;
&lt;p&gt;The following code snippet shows the process of converting PDF file into DOC.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToDOC-PDFToDOC.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;using-the-docsaveoptions-class&#34;&gt;&lt;strong&gt;Using the DocSaveOptions Class&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/docsaveoptions&#34;&gt;DocSaveOptions&lt;/a&gt; class provides numerous properties that improve the process of converting PDF files to DOC format. Among these properties, Mode enables you to specify the recognition mode for PDF content. You can specify any value from the RecognitionMode enumeration for this property. Each of these values have specific benefits and limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Textbox mode is fast and good for preserving the original look of the PDF file, but the edit ability of the resulting document could be limited. Every visually grouped block of text in the original PDF is converted into a textbox in the output document. This achieves maximal resemblance to the original so the output document looks good, but it consists entirely of textboxes and it could make editing in Microsoft Word quite hard.&lt;/li&gt;
&lt;li&gt;Flow is full recognition mode, where the engine performs grouping and multi-level analysis to restore the original document as per the author&amp;rsquo;s intent while producing an easily editable document. The limitation is that the output document might look different from the original.&lt;/li&gt;
&lt;li&gt;The RelativeHorizontalProximity property can be used to control the relative proximity between textual elements and means that distance is normed by the font size. Larger fonts may have bigger distances between syllables and still be looked at as a single whole. It is specified as a percentage of the font size, for example, 1 = 100%. This means that two characters of 12pt that are placed 12 pt apart are proximal.&lt;/li&gt;
&lt;li&gt;RecognitionBullets is used to switch on the recognition of bullets during conversion.&lt;/li&gt;
&lt;/ul&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToDOC-SaveUsingSaveOptions.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;convert-pdf-to-word-docx-in-c&#34;&gt;&lt;strong&gt;Convert PDF to Word DOCX in C#&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Try online
You can check the quality of Aspose.PDF conversion and view the results online at this link:
&lt;a href=&#34;https://products.aspose.app/pdf/conversion/pdf-to-docx&#34;&gt;products.aspose.app/pdf/conversion/pdf-to-docx&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Aspose.PDF for .NET API lets you read and convert PDF documents to &lt;a href=&#34;https://wiki.fileformat.com/word-processing/docx/&#34;&gt;DOCX&lt;/a&gt; using C# and any .NET language. Docx is well-known format for Microsoft Word documents whose structure was changed from plain binary to a combination of XML and binary files. Docx files can be opened with Word 2007 and lateral versions but not with the earlier versions of MS Word which support DOC file extensions.  &lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/docsaveoptions&#34;&gt;DocSaveOptions&lt;/a&gt; class has a property named Format which provides the capability to specify the format of resultant document, that is, DOC or DOCX. In order to convert a PDF file to DOCX format, please pass the Docx value from the DocSaveOptions.DocFormat enumeration. Please take a look over following code snippet which provides the capability to convert PDF file to DOCX format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToDOC-ConvertToDOCX.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert PDF to Excel XLS</title>
      <link>https://docs.aspose.com/pdf/net/convert-pdf-to-excel-xls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-pdf-to-excel-xls/</guid>
      <description>
        
        
        &lt;p&gt;Aspose.Cells for .NET provides the capability to create as well as manipulate existing Excel workbooks. It also provides the capability to transform Excel workbook to PDF format. As Aspose.PDF for .NET is a PDF manipulation component, we have introduced a feature that renders PDF file to Excel workbook (&lt;a href=&#34;https://wiki.fileformat.com/spreadsheet/xls/&#34;&gt;XLS&lt;/a&gt; files). During this conversion, the individual pages of the PDF file are converted to Excel worksheets.&lt;/p&gt;
&lt;h2 id=&#34;convert-pdf-to-xls&#34;&gt;&lt;strong&gt;Convert PDF to XLS&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/pdf-to-xlsx&#34;&gt;products.aspose.app/pdf/conversion/pdf-to-xlsx&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;In order to convert PDF files to XLS format, Aspose.PDF has a class called ExcelSaveOptions. An object of the ExcelSaveOptions class is passed as a second argument to the Document.Save(..) constructor. The following code snippet shows the process for converting PDF file into XLS format.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToXLS-PDFToXLS.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;convert-pdf-to-xls-with-control-column&#34;&gt;&lt;strong&gt;Convert PDF to XLS with Control Column&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;When converting a PDF to XLS format, a blank column is added to the output file as first column. The in ExcelSaveOptions class&amp;rsquo; InsertBlankColumnAtFirst option is used to control this column. Its default value is true.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToXLS-ControlColumn.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;convert-pdf-to-single-excel-worksheet&#34;&gt;&lt;strong&gt;Convert PDF to Single Excel Worksheet&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;When exporting a PDF file with a lot of pages to XLS, each page is exported to a different sheet in the Excel file. This is because the MinimizeTheNumberOfWorksheets property is set to false by default. To ensure that all pages are exported to one single sheet in the output Excel file, set the MinimizeTheNumberOfWorksheets property to true.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToXLS-ExportAllPagesToSingle.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Convert PDF to PowerPoint PPTX</title>
      <link>https://docs.aspose.com/pdf/net/convert-pdf-to-powerpoint-pptx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/convert-pdf-to-powerpoint-pptx/</guid>
      <description>
        
        
        &lt;p&gt;We have an API named &lt;a href=&#34;https://products.aspose.com/slides/net&#34;&gt;Aspose.Slides&lt;/a&gt; which offers the feature to create as well as manipulate &lt;a href=&#34;https://wiki.fileformat.com/specification/presentation/ppt/&#34;&gt;PPT&lt;/a&gt;/&lt;a href=&#34;https://wiki.fileformat.com/specification/presentation/pptx/&#34;&gt;PPTX&lt;/a&gt; presentations. This API also provides the feature to convert PPT/PPTX files to PDF format. Recently we received requirements from many of our customers to support the capability of PDF transformation to PPTX format. Starting release of &lt;a href=&#34;https://downloads.aspose.com/pdf/net&#34;&gt;Aspose.PDF for .NET 10.3.0&lt;/a&gt;, we have introduced a feature to transform PDF documents to PPTX format. During this conversion, the individual pages of the PDF file are converted to separate slides in the PPTX file.&lt;/p&gt;
&lt;p&gt;During PDF to PPTX conversion, the text is rendered as Text where you can select/update it. Please note that in order to convert PDF files to PPTX format, Aspose.PDF provides a class named &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/pptxsaveoptions&#34;&gt;PptxSaveOptions&lt;/a&gt;. An object of the PptxSaveOptions class is passed as a second argument to the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt;.Save(..) method. The following code snippet shows the process for converting PDF files into PPTX format.&lt;/p&gt;
&lt;h2 id=&#34;pdf-to-pptx-using-net&#34;&gt;&lt;strong&gt;PDF to PPTX using .NET&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In order to convert PDF to PPTX, use the following code steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an instance of &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; class&lt;/li&gt;
&lt;li&gt;Create an instance of &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/pptxsaveoptions&#34;&gt;PptxSaveOptions&lt;/a&gt; class&lt;/li&gt;
&lt;li&gt;Use the Save method of the Document object to save the PDF as PPTX&lt;/li&gt;
&lt;/ol&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToPPT-PDFToPPT.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;convert-pdf-to-pptx-with-slides-as-images&#34;&gt;&lt;strong&gt;Convert PDF to PPTX with Slides as Images&lt;/strong&gt;&lt;/h3&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You can check the quality of Aspose.PDF conversion and view the results online at this link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://products.aspose.app/pdf/conversion/pdf-to-pptx&#34;&gt;products.aspose.app/pdf/conversion/pdf-to-pptx&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;In case if you need to convert a searchable PDF to PPTX as images instead of selectable text, Aspose.PDF provides such a feature via &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/pptxsaveoptions&#34;&gt;Aspose.Pdf.PptxSaveOptions&lt;/a&gt; class. To achieve this, set property &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/pptxsaveoptions/properties/slidesasimages&#34;&gt;&lt;em&gt;&lt;strong&gt;SlidesAsImages&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; of &lt;strong&gt;PptxSaveOptios&lt;/strong&gt; class to &amp;lsquo;true&amp;rsquo; as shown in the following code sample.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToPPT-PDFtoPPTXWithSlidesAsImages.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;progress-detail-of-pptx-conversion&#34;&gt;&lt;strong&gt;Progress Detail of PPTX Conversion&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET lets you track the progress of PDF to PPTX conversion. The Aspose.Pdf.PptxSaveOptions class provides &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/pptxsaveoptions/properties/customprogresshandler&#34;&gt;CustomProgressHandler&lt;/a&gt; property that can be specified to a custom method for tracking the progress of conversion as shown in the following code sample.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToPPT-PDFtoPTTXWithProgressTracking.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;Following is the custom method for displaying progress conversion.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToPPT-ShowProgressOnConsole.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
  </channel>
</rss>
