<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working with Aspose.PDF</title>
    <link>https://docs.aspose.com/pdf/net/working-with-aspose-pdf/</link>
    <description>Recent content in Working with Aspose.PDF on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.aspose.com/pdf/net/working-with-aspose-pdf/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: Working with Document</title>
      <link>https://docs.aspose.com/pdf/net/working-with-document/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-document/</guid>
      <description>
        
        
        &lt;p&gt;This section describes various techniques for PDF document handling using C#: create new PDF document, edit meta data in existing PDF file, optimize PDF file for Web or reduce file size, working with table of contents, validate document against PDF/A standard  etc.&lt;/p&gt;
&lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/create-document/&#34;&gt;Create Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/formatting-pdf-document/&#34;&gt;Formatting PDF Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/manipulate-pdf-document/&#34;&gt;Manipulate PDF Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/optimize-pdf-document/&#34;&gt;Optimize PDF Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/pdf-file-metadata/&#34;&gt;PDF File Metadata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Document Conversion</title>
      <link>https://docs.aspose.com/pdf/net/working-with-document-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-document-conversion/</guid>
      <description>
        
        
        &lt;h4 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-a-file-to-pdf-format/&#34;&gt;Convert a File to PDF Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-html-to-pdf/&#34;&gt;Convert HTML to PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-markdown-to-pdf/&#34;&gt;Convert Markdown to PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-a-to-pdf/&#34;&gt;Convert PDF-A to PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/pdf-to-html-basics-of-conversion/&#34;&gt;PDF to HTML - Basics of Conversion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-file-into-html-format/&#34;&gt;Convert PDF File into HTML Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-file-to-other-formats/&#34;&gt;Convert PDF file to other Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-to-doc-and-docx/&#34;&gt;Convert PDF to DOC and DOCX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-to-excel-xls/&#34;&gt;Convert PDF to Excel XLS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-to-powerpoint-pptx/&#34;&gt;Convert PDF to PowerPoint PPTX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Attachments</title>
      <link>https://docs.aspose.com/pdf/net/working-with-attachments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-attachments/</guid>
      <description>
        
        
        &lt;p&gt;PDF files allow attaching files as content and are one of the key features of PDF file format. Different file formats such as Word DOC/DOCX, Excel XLS/XLSX, EML, JPG, PNG, GLB, etc. can be embedded in a PDF file. Aspose.PDF for .NET API lets you work with attachments in a PDF file using your .NET applications. You can add/embed attachments in a PDF file, get attachments information from a PDF, access individual attachment from PDF file, and remove attachments from PDF in C# or any other .NET programming language. This article demonstrates the functionality of working with attachments in a PDF file.&lt;/p&gt;
&lt;h2 id=&#34;add-attachment-to-pdf&#34;&gt;&lt;strong&gt;Add Attachment to PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Attachments can contain a wide variety of information and can be of a variety of file types. This article explains how to add an attachment to a PDF file.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new C# project.&lt;/li&gt;
&lt;li&gt;Add a reference to Aspose.PDF DLL.&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; object.&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/filespecification&#34;&gt;FileSpecification&lt;/a&gt; object with the file you are adding, and file description.&lt;/li&gt;
&lt;li&gt;Add the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/filespecification&#34;&gt;FileSpecification&lt;/a&gt; object to the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/embeddedfilecollection&#34;&gt;EmbeddedFiles&lt;/a&gt; collection, with the collection’s Add method.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/embeddedfilecollection&#34;&gt;EmbeddedFiles&lt;/a&gt; collection contains all the attachments in the PDF file. The following code snippet shows you how to add an attachment in a PDF document.&lt;/p&gt;
&lt;h4 id=&#34;c&#34;&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/h4&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Attachments-AddAttachment-AddAttachment.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;get-all-attachments-from-a-pdf-document&#34;&gt;&lt;strong&gt;Get all Attachments from a PDF Document&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;With Aspose.PDF, it is possible to get all attachments from a PDF document. This is useful either when you want to save the documents separately from the PDF, or if you need to strip a PDF of attachments.&lt;/p&gt;
&lt;p&gt;To get all attachments from a PDF file:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Loop through the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/embeddedfilecollection&#34;&gt;EmbeddedFiles&lt;/a&gt; collection. The &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/embeddedfilecollection&#34;&gt;EmbeddedFiles&lt;/a&gt; collection contains all attachments. Each element of this collection represents a &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/filespecification&#34;&gt;FileSpecification&lt;/a&gt; object. Each iteration of the foreach loop through the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/embeddedfilecollection&#34;&gt;EmbeddedFiles&lt;/a&gt; collection returns a &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/filespecification&#34;&gt;FileSpecification&lt;/a&gt; object.&lt;/li&gt;
&lt;li&gt;Once the object is available, retrieve either all the attached file&amp;rsquo;s properties or the file itself.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following code snippets show how to get all the attachments from a PDF document.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Attachments-GetAlltheAttachments-GetAlltheAttachments.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;get-individual-attachment&#34;&gt;&lt;strong&gt;Get Individual Attachment&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;In order to get an individual attachment, we can specify the index of attachment in &lt;strong&gt;EmbeddedFiles&lt;/strong&gt; object of Document instance. Please try using following code snippet.&lt;/p&gt;
&lt;h4 id=&#34;c-1&#34;&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/h4&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Attachments-GetIndividualAttachment-GetIndividualAttachment.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;delete-all-attachments-from-pdf-document&#34;&gt;&lt;strong&gt;Delete All Attachments from PDF Document&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF can remove attachments from PDF files. A PDF document&amp;rsquo;s attachments are held in the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; object&amp;rsquo;s EmbeddedFiles collection.&lt;/p&gt;
&lt;p&gt;To delete all attachments associated with a PDF file:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Call the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/embeddedfilecollection&#34;&gt;EmbeddedFiles&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/embeddedfilecollection/methods/delete&#34;&gt;Delete&lt;/a&gt; method.&lt;/li&gt;
&lt;li&gt;Save the updated file using the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; object&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf.document/save/methods/4&#34;&gt;Save&lt;/a&gt; method.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following code snippet shows how to remove attachments from a PDF document.&lt;/p&gt;
&lt;h4 id=&#34;c-2&#34;&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/h4&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Attachments-DeleteAllAttachments-DeleteAllAttachments.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;get-attachment-information&#34;&gt;&lt;strong&gt;Get Attachment Information&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;As mentioned in &lt;a href=&#34;&#34;&gt;Get All Annotations from the Page of a PDF Document&lt;/a&gt;, attachment information is held in the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/filespecification&#34;&gt;FileSpecification&lt;/a&gt; object, gathered with other attachments in the Document object&amp;rsquo;s EmbeddedFiles collection. The FileSpecification object provides methods that get information about the attachment, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name - the file name.&lt;/li&gt;
&lt;li&gt;Description - the file description.&lt;/li&gt;
&lt;li&gt;MIMEType - the file&amp;rsquo;s MIME type.&lt;/li&gt;
&lt;li&gt;Params - information about the file parameters, for example CheckSum, CreationDate, ModDate and Size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get these parameters, first make sure that the Params property is not null. Either loop through all of the attachments in the EmbeddedFiles collection using a foreach loop, or get an individual attachment by specifying its index value. The following code snippets show how to get information about a specific attachment.&lt;/p&gt;
&lt;h4 id=&#34;c-3&#34;&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/h4&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Attachments-GetAttachmentInfo-GetAttachmentInfo.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;disable-files-compression-when-adding-as-embedded-resources&#34;&gt;&lt;strong&gt;Disable Files Compression when Adding as Embedded Resources&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The FileSpecification class allows developers to add attachments to PDF documents. By default, attachments are compressed. We have updated the API to allow developers to disable compression when adding files as embedded resource. This gives developers more control over how files are processed.&lt;/p&gt;
&lt;p&gt;To allow developers to control file compression the Encoding property has been added to the FileSpecification class. This property determines which encoding will be used for file compression. The property accepts a value from the FileEncoding enumerator. The possible values are FileEncoding.None and FileEncoding.Zip.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

If Encoding is set to FileEncoding.None, then the attachment is not compressed. The default encoding is FileEncoding.Zip.
&lt;/div&gt;

&lt;p&gt;The following code snippet shows how to add an attachment to a PDF document.&lt;/p&gt;
&lt;h4 id=&#34;c-4&#34;&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/h4&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Attachments-DisableFilesCompression-DisableFilesCompression.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Working with Bookmarks</title>
      <link>https://docs.aspose.com/pdf/net/working-with-bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-bookmarks/</guid>
      <description>
        
        
        &lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/add-and-delete-a-bookmark/&#34;&gt;Add and Delete a Bookmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/get-update-and-expand-a-bookmark/&#34;&gt;Get, Update and Expand a Bookmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Annotations</title>
      <link>https://docs.aspose.com/pdf/net/working-with-annotations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-annotations/</guid>
      <description>
        
        
        &lt;h4 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/redact-certain-page-region-with-redactionannotation/&#34;&gt;Redact certain page region with RedactionAnnotation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/add-delete-and-get-annotation/&#34;&gt;Add, Delete and Get Annotation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/set-callout-property-for-freetextannotation/&#34;&gt;Set Callout Property for FreeTextAnnotation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/set-freetextannotation-formatting-and-strike-out-words/&#34;&gt;Set FreeTextAnnotation Formatting and Strike Out Words&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with JavaScript</title>
      <link>https://docs.aspose.com/pdf/net/working-with-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-javascript/</guid>
      <description>
        
        
        &lt;h2 id=&#34;adding-javascript-dom&#34;&gt;&lt;strong&gt;Adding JavaScript (DOM)&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;what-is-acrobat-javascript&#34;&gt;&lt;strong&gt;What is Acrobat JavaScript?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Acrobat JavaScript is a language based on the core of JavaScript version 1.5 of ISO-16262, formerly known as ECMAScript, an object-oriented scripting language developed by Netscape Communications. JavaScript was created to offload Web page processing from a server onto a client in Web-based applications. Acrobat JavaScript implements extensions, in the form of new objects and their accompanying methods and properties, to the JavaScript language. These Acrobat-specific objects enable a developer to manage document security, communicate with a database, handle file attachments, manipulate a PDF file so that it behaves like an interactive, web-enabled form, and so on. Because the Acrobat-specific objects are added on top of core JavaScript, you still have access to its standard classes, including Math, String, Date, Array, and RegExp.&lt;/p&gt;
&lt;h3 id=&#34;acrobat-javascript-vs-html-web-javascript&#34;&gt;&lt;strong&gt;Acrobat JavaScript vs HTML (Web) JavaScript&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;PDF documents have great versatility since they can be displayed both within the Acrobat software as well as a Web browser. Therefore, it is important to be aware of the differences between Acrobat JavaScript and JavaScript used in a Web browser, also known as HTML JavaScript :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Acrobat JavaScript does not have access to objects within an HTML page. Similarly, HTML JavaScript cannot access objects within a PDF file.&lt;/li&gt;
&lt;li&gt;HTML JavaScript is able to manipulate such objects as Window. Acrobat JavaScript cannot access this particular object but it can manipulate PDF-specific objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can add JavaScript at both the document and page levels using &lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/&#34;&gt;Aspose.PDF for .NET&lt;/a&gt;. To add JavaScript:&lt;/p&gt;
&lt;h3 id=&#34;adding-javascript-to-document-or-page-action&#34;&gt;&lt;strong&gt;Adding JavaScript to Document or Page Action&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Declare and instantiate a JavascriptAction object with desired JavaScript statement as the constructor argument.&lt;/li&gt;
&lt;li&gt;Assign the JavascriptAction object to the desired action of the PDF document or page.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The example below applies the OpenAction to a specific document.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Working-Document-AddJavaScriptToPage-AddJavaScriptToPage.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;addingremoving-javascript-to-document-level&#34;&gt;&lt;strong&gt;Adding/Removing JavaScript to Document Level&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;A new property named JavaScript is added in Document class which has JavaScript collection type and provides access to JavaScript scenarios by its key. This property is used to add Document level JavaScript. The JavaScript collection has the following properties and methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string this(string key)– Gets or sets JavaScript by its name&lt;/li&gt;
&lt;li&gt;IList Keys – provides a list of existing keys in JavaScript collection&lt;/li&gt;
&lt;li&gt;bool Remove(string key) – removes JavaScript by its key.&lt;/li&gt;
&lt;/ul&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Working-Document-AddRemoveJavascriptToDoc-AddRemoveJavascriptToDoc.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Working with Layers</title>
      <link>https://docs.aspose.com/pdf/net/working-with-layers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-layers/</guid>
      <description>
        
        
        &lt;h2 id=&#34;add-layers-to-pdf-file&#34;&gt;&lt;strong&gt;Add Layers to PDF File&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Layers can be used in PDF documents in many ways. You might have a multilingual file that you want to distribute and have text in each language appear on different layers, with the background design appearing on a separate layer. You might also create documents with animation that appears on a separate layer. Or you might add a license agreement to your file, and prevent a user from viewing the content until they agree to the terms of the agreement. To work with layers in PDF files, use the following API members.&lt;/p&gt;
&lt;p&gt;The Layer class contains the following properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name – The layer&amp;rsquo;s name.&lt;/li&gt;
&lt;li&gt;Id – The layer&amp;rsquo;s ID.&lt;/li&gt;
&lt;li&gt;Contents – The layer operator list.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once the Layer objects have been defined, add them to the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/page&#34;&gt;Page&lt;/a&gt; object&amp;rsquo;s Layers collection.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Working-Document-AddLayers-AddLayers.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Working with Links and Actions</title>
      <link>https://docs.aspose.com/pdf/net/working-with-links-and-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-links-and-actions/</guid>
      <description>
        
        
        &lt;h4 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/create-update-and-extract-link/&#34;&gt;Create, Update and Extract Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/add-and-get-hyperlink/&#34;&gt;Add and Get Hyperlink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Security and Signatures</title>
      <link>https://docs.aspose.com/pdf/net/working-with-security-and-signatures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-security-and-signatures/</guid>
      <description>
        
        
        &lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/digitally-sign-pdf-file/&#34;&gt;Digitally sign PDF file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/set-privileges-encrypt-and-decrypt-pdf-file/&#34;&gt;Set Privileges, Encrypt and Decrypt PDF File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/extract-image-and-signature-information/&#34;&gt;Extract Image and Signature Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/sign-pdf-document-from-smart-card/&#34;&gt;Sign PDF Document From Smart Card&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Operators</title>
      <link>https://docs.aspose.com/pdf/net/working-with-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-operators/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction-to-the-pdf-operators-and-their-usage&#34;&gt;&lt;strong&gt;Introduction to the PDF Operators and Their Usage&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;An operator is a PDF keyword specifying some action that shall be performed, such as painting a graphical shape on the page. An operator keyword is distinguished from a named object by the absence of an initial solidus character (2Fh). Operators are meaningful only inside the content stream.&lt;/p&gt;
&lt;p&gt;A content stream is a PDF stream object whose data consists of instructions describing the graphical elements to be painted on a page. More details about PDF operators can be found in the &lt;a href=&#34;http://www.adobe.com/devnet/pdf/pdf_reference.html&#34;&gt;PDF specification&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;implementation-details&#34;&gt;&lt;strong&gt;Implementation Details&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;This topic explains how to use operators with Aspose.PDF. The selected example adds an image into a PDF file to illustrate the concept. To add an image in a PDF file, different operators are needed. This example uses &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf.ioperatorselector/visit/methods/28&#34;&gt;GSave&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf.ioperatorselector/visit/methods/10&#34;&gt;ConcatenateMatrix&lt;/a&gt;, &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf.ioperatorselector/visit/methods/14&#34;&gt;Do&lt;/a&gt;, and &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf.ioperatorselector/visit/methods/26&#34;&gt;GRestore&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;GSave&lt;/strong&gt; operator saves the PDF&amp;rsquo;s current graphical state.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;ConcatenateMatrix&lt;/strong&gt; (concatenate matrix) operator is used to define how an image should be placed on the PDF page.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Do&lt;/strong&gt; operator draws the image on the page.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;GRestore&lt;/strong&gt; operator restores the graphical state.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add an image into a PDF file:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; object and open the input PDF document.&lt;/li&gt;
&lt;li&gt;Get the particular page the image is going to be added to.&lt;/li&gt;
&lt;li&gt;Add the image into the page’s Resources collection.&lt;/li&gt;
&lt;li&gt;Use the operators to place the image on the page:
&lt;ol&gt;
&lt;li&gt;First, use the GSave operator to save the current graphical state.&lt;/li&gt;
&lt;li&gt;Then use the ConcatenateMatrix operator to specify where the image is to be placed.&lt;/li&gt;
&lt;li&gt;Use the Do operator to draw the image on the page.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Finally, use GRestore operator to save the updated graphical state.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following code snippet shows how to use PDF operators.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Operators-PDFOperators-PDFOperators.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;draw-xform-on-page-using-operators&#34;&gt;&lt;strong&gt;Draw XForm on Page using Operators&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;This topic demonstrates how to use the GSave/GRestore operators, the ContatenateMatrix operator to position an xForm and the Do operator to draw an xForm on a page.&lt;/p&gt;
&lt;p&gt;The code below wraps a PDF file&amp;rsquo;s existing contents with the GSave/GRestore operator pair. This approach helps get the initial graphics state at the and of the existing contents. Without this approach, undesirable transformations might remain at the end of the existing operator chain.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Operators-DrawXFormOnPage-DrawXFormOnPage.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;remove-graphics-objects-using-operator-classes&#34;&gt;&lt;strong&gt;Remove Graphics Objects using Operator Classes&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The operator classes provide great features for PDF manipulation. When a PDF file contains graphics that cannot be removed using the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf.facades/pdfcontenteditor&#34;&gt;PdfContentEditor&lt;/a&gt; class&amp;rsquo; DeleteImage(..) method, the operator classes can be used to remove them instead.&lt;/p&gt;
&lt;p&gt;The following code snippet shows how to remove graphics. Please note that if the PDF file contains text labels for the graphics, they might persist in the PDF file, using this approach. Therefore search the graphic operators for an alternate method to delete such images.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Operators-RemoveGraphicsObjects-RemoveGraphicsObjects.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Working with Tables</title>
      <link>https://docs.aspose.com/pdf/net/working-with-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-tables/</guid>
      <description>
        
        
        &lt;p&gt;Learn how to add a table from a PDF document or extract a table from PDF, applying cell style, fill a table using DataSource, customize the rows and columns, etc.&lt;/p&gt;
&lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/add-and-extract-a-table/&#34;&gt;Add and Extract a Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/manipulate-and-integrate-table/&#34;&gt;Manipulate and Integrate Table&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Tagged PDFs</title>
      <link>https://docs.aspose.com/pdf/net/working-with-tagged-pdfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-tagged-pdfs/</guid>
      <description>
        
        
        &lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/create-tagged-pdf-documents/&#34;&gt;Create Tagged PDF Documents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/extract-tagged-content-from-tagged-pdfs/&#34;&gt;Extract Tagged Content from Tagged PDFs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/set-tagged-pdfs-element-properties/&#34;&gt;Set Tagged PDFs Element Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/working-with-table-in-tagged-pdfs/&#34;&gt;Working with Table in Tagged PDFs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/pdf-ua-compliance-test-errors-list/&#34;&gt;PDF-UA Compliance Test - Errors List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Forms</title>
      <link>https://docs.aspose.com/pdf/net/working-with-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-forms/</guid>
      <description>
        
        
        &lt;h4 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/add-delete-and-modify-form-field/&#34;&gt;Add, Delete and Modify Form Field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/get-and-set-form-field/&#34;&gt;Get and Set Form Field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/working-with-xfa-forms/&#34;&gt;Working with XFA Forms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Graphs</title>
      <link>https://docs.aspose.com/pdf/net/working-with-graphs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-graphs/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-is-graph&#34;&gt;&lt;strong&gt;What is Graph&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Adding graphs to PDF documents is a very common task for developers while working with Adobe Acrobat Writer or other PDF processing applications. There are many types of graphs that can be used in PDF applications.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/&#34;&gt;Aspose.PDF for .NET&lt;/a&gt; also supports adding graphs to PDF documents. For this purpose, the Graph class is provided. Graph is a paragraph level element and it can be added to the Paragraphs collection in a Page instance. A Graph instance contains a collection of Shapes.&lt;/p&gt;
&lt;p&gt;The following types of shapes are supported by the Graph class:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arc&lt;/li&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Curve&lt;/li&gt;
&lt;li&gt;Line&lt;/li&gt;
&lt;li&gt;Rectangle&lt;/li&gt;
&lt;li&gt;Ellipse&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create-filled-rectangle-object&#34;&gt;&lt;strong&gt;Create Filled Rectangle Object&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET supports the feature to add graph objects (for example graph, line, rectangle etc.) to PDF documents. It also offers the feature to fill rectangle object with a certain color.&lt;/p&gt;
&lt;p&gt;The following code snippet shows how to add a Rectangle object that is filled with color.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-CreateFilledRectangle-CreateFilledRectangle.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;add-text-inside-graph-object&#34;&gt;&lt;strong&gt;Add text inside Graph Object&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET supports to add text inside the Graph Object. Text property of Graph Object provides option to set text of the Graph Object. The following code snippet shows how to add text inside a Rectangle object.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Open document
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;outFile&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Graph.pdf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Document&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pdfDoc&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Document&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Page&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pdfPage&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pdfDoc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Pages&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Add&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Drawing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Graph&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;graph&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Drawing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Graph&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;500&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;pdfPage&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Paragraphs&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Add&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;graph&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Add rectangle with text
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Drawing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Rectangle&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rect&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Drawing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Rectangle&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;rect&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;GraphInfo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;LineWidth&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;1f&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;rect&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;GraphInfo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Color&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Aspose&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Color&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Black&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;rect&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Text&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TextFragment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Rectangle&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;graph&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Shapes&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Add&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rect&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;pdfDoc&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Save&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;outFile&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;add-line-object-to-pdf&#34;&gt;&lt;strong&gt;Add line object to PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET supports to get the leverage to add Line object where you can also specify the dash pattern, color and other formatting for Line element. The following code snippet shows how to add a Rectangle object that is filled with color.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-AddLineObject-AddLineObject.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;dashlengthinblack-and-dashlengthinwhite-properties-for-line-object&#34;&gt;&lt;strong&gt;DashLengthInBlack and DashLengthInWhite properties for Line object&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The legacy Aspose.PDF.Generator provides the feature to set DashLengthInBlack and DashLengthInWhite properties where dash pattern for line object can be defined. Similar features can be accomplished while using DOM approach.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-DashLength-DashLength.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;drawing-line-across-the-page&#34;&gt;&lt;strong&gt;Drawing Line across the page&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET supports line object to draw a cross starting from Left-Bottom to Right-Upper corner and Left-Top corner to Bottom-Right corner. Please take a look over following code snippet to accomplish this requirement.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-DrawingLine-DrawingLine.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;create-rectangle-with-alpha-color-channel&#34;&gt;&lt;strong&gt;Create Rectangle with Alpha color channel&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET supports to fill rectangle object with a certain color. A rectangle object can also have Alpha color channel to give transparent appearance. The following code snippet shows how to add a &lt;strong&gt;Rectangle&lt;/strong&gt; object with Alpha color channel.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-CreateRectangleWithAlphaColor-CreateRectangleWithAlphaColor.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;how-to-add-drawing-with-transparent-color&#34;&gt;&lt;strong&gt;How to add drawing with transparent Color&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;While creating drawing objects such as Rectangle, Circle, Eclipse etc, we provide color information for border as well as fill color information. In order to have transparent fill impression, the &lt;strong&gt;FromArgb(..)&lt;/strong&gt; method of Aspose.PDF.Color object can be used. 
Please take a look over following code snippet which demonstrates the feature to fill rectangle object with transparent color. Please try using following code snippet to accomplish this requirement.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-AddDrawing-AddDrawing.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;controlling-z-order-of-rectangle&#34;&gt;&lt;strong&gt;Controlling Z-Order of Rectangle&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;When adding more than one instance of same object inside PDF file, we can control their rendering by specifying the Z-Order. Z-Order is also used when we need to render objects on top of each other. The following code snippet shows the steps to render Rectangle objects on top of each other.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-ControlRectangleZOrder-ControlRectangleZOrder.cs&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Graphs-ControlRectangleZOrder-AddRectangle.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;add-drawing-with-gradient-fill&#34;&gt;&lt;strong&gt;Add Drawing with Gradient Fill&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET supports the ability to create a pure PDF document that has a single gradient transitioning from one Spot/Process color to another Spot/Process color. This is illustrated in the following code sample.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-Graphs-AddDrawingWithGradientFill-AddDrawingWithGradientFill.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Working with Headings</title>
      <link>https://docs.aspose.com/pdf/net/working-with-headings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-headings/</guid>
      <description>
        
        
        &lt;h2 id=&#34;apply-numbering-style-in-heading&#34;&gt;&lt;strong&gt;Apply Numbering Style in Heading&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Headings are the important parts of any document. Writers always try to make headings more prominent and meaningful to its readers. If there are more than one headings in a document, a writer has several options to organize these headings. One of the most common approach to organize headings is to write headings in Numbering Style.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/&#34;&gt;Aspose.PDF for .NET&lt;/a&gt; offers many pre-defined numbering styles. These pre-defined numbering styles are stored in an enumeration, NumberingStyle. The pre-defined values of NumberingStyle enumeration and their descriptions are given below:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Heading Types&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;NumeralsArabic&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arab type,for example, 1,1.1,&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;NumeralsRomanUppercase&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Roman upper type, for example, I,I.II, &amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;NumeralsRomanLowercase&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Roman lower type, for example, i,i.ii, &amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;LettersUppercase&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;English upper type, for example, A,A.B, &amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;LettersLowercase&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;English lower type, for example, a,a.b, &amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;The &lt;strong&gt;Style&lt;/strong&gt; property of &lt;strong&gt;Aspose.PDF.Heading&lt;/strong&gt; class is used to set the numbering styles of the headings.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The following figure shows the effect of different numbering styles:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.aspose.com/docs/download/attachments/426672417/Apply+Numbering+Style-001.png?version=1&amp;amp;modificationDate=1447505105073&#34; alt=&#34;todo:image_alt_text&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;strong&gt;Figure: Pre-defined numbering styles&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;The source code, to obtain the output shown in the above figure, is given below in the example.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Headings-ApplyNumberStyle-ApplyNumberStyle.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Working with Images</title>
      <link>https://docs.aspose.com/pdf/net/working-with-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-images/</guid>
      <description>
        
        
        &lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-cgm-image-to-pdf/&#34;&gt;Convert CGM Image to PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/convert-pdf-pages/&#34;&gt;Convert PDF Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/working-with-attachments/&#34;&gt;FlateDecode Compression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/manipulate-images/&#34;&gt;Manipulate Images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Pages</title>
      <link>https://docs.aspose.com/pdf/net/working-with-pages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-pages/</guid>
      <description>
        
        
        &lt;h2 id=&#34;working-with-pages&#34;&gt;&lt;strong&gt;Working with Pages&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;.NET applications built for working with PDF files need to have some commonly used functionality such as split and merge pdf documents, extract pages from a PDF file, Insert and remove pages from a PDF file and so on. Aspose.PDF for .NET lets you perform these operations with simple lines of code based on the Document Object Model it follows. This section provides powerful features of the API for working with PDF pages and page properties.&lt;/p&gt;
&lt;h3 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/concatenate-pdf-files/&#34;&gt;Concatenate PDF Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/get-and-set-page-properties/&#34;&gt;Get and Set Page Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/manipulate-page-in-a-pdf-file/&#34;&gt;Manipulate Page in a PDF File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/working-with-pdf-portfolio/&#34;&gt;Split PDF into Multiple PDFs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with PDF Portfolio</title>
      <link>https://docs.aspose.com/pdf/net/working-with-pdf-portfolio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-pdf-portfolio/</guid>
      <description>
        
        
        &lt;h2 id=&#34;working-with-pdf-portfolio&#34;&gt;&lt;strong&gt;Working with PDF Portfolio&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;PDF Portfolios allow you to bring together content from a variety of sources (for example, PDF, Word, Excel, JPEG files) into one unified container. The original files retain their individual identities but are assembled into a PDF Portfolio file. Users can open, read, edit, and format each component file independently of the other component files.&lt;/p&gt;
&lt;h3 id=&#34;how-to-create-a-pdf-portfolio&#34;&gt;&lt;strong&gt;How to Create a PDF Portfolio&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Aspose.PDF allows creating PDF Portfolio documents using the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; class. Add a file into a Document.Collection object after getting it with the &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/filespecification&#34;&gt;FileSpecification&lt;/a&gt; class. When the files have been added, use the Document class&amp;rsquo; Save method to save the portfolio document.&lt;/p&gt;
&lt;p&gt;The following example uses a Microsoft Excel File, a Word document and an image file to create a PDF Portfolio.&lt;/p&gt;
&lt;p&gt;The code below results in the following portfolio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A PDF Portfolio created with Aspose.PDF&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;working-with-pdf-portfolio_1.jpg&#34; alt=&#34;todo:image_alt_text&#34;&gt;&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-TechnicalArticles-CreatePDFPortfolio-CreatePDFPortfolio.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;extract-files-from-pdf-portfolio&#34;&gt;&lt;strong&gt;Extract files from PDF Portfolio&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;PDF Portfolios allow you to bring together content from a variety of sources (for example, PDF, Word, Excel, JPEG files) into one unified container. The original files retain their individual identities but are assembled into a PDF Portfolio file. Users can open, read, edit, and format each component file independently of the other component files.&lt;/p&gt;
&lt;p&gt;Aspose.PDF allows the creation of PDF Portfolio documents using &lt;a href=&#34;https://apireference.aspose.com/net/pdf/aspose.pdf/document&#34;&gt;Document&lt;/a&gt; class. It also offers the capability to extract files from PDF portfolio.&lt;/p&gt;
&lt;p&gt;The following image shows a sample PDF Portfolio.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;working-with-pdf-portfolio_1.jpg&#34; alt=&#34;todo:image_alt_text&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following code snippet shows you the steps to extract files from PDF portfolio.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-TechnicalArticles-ExtractFilesFromPortfolio-ExtractFilesFromPortfolio.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;remove-files-from-pdf-portfolio&#34;&gt;&lt;strong&gt;Remove Files from PDF Portfolio&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In order to delete/remove files from PDF portfolio, try using the following code lines.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-TechnicalArticles-RemoveFilesFromPortfolio-RemoveFilesFromPortfolio.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Working with Stamps and Watermarks</title>
      <link>https://docs.aspose.com/pdf/net/working-with-stamps-and-watermarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-stamps-and-watermarks/</guid>
      <description>
        
        
        &lt;h3 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/adding-stamp-in-a-pdf-file/&#34;&gt;Adding Stamp in a PDF file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/manage-header-and-footer-of-pdf-file/&#34;&gt;Manage Header and Footer of PDF File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/working-with-existing-watermarks/&#34;&gt;Working with Existing Watermarks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with Text</title>
      <link>https://docs.aspose.com/pdf/net/working-with-text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-text/</guid>
      <description>
        
        
        &lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/add-text-to-a-pdf-file/&#34;&gt;Add Text to a PDF file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/text-formatting-inside-pdf/&#34;&gt;Text Formatting inside PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/add-tooltip-to-text/&#34;&gt;Add Tooltip to Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/extract-text-from-pdf/&#34;&gt;Extract Text from PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/extract-paragraph-from-pdf/&#34;&gt;Extract Paragraph from PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/replace-text-in-a-pdf-document/&#34;&gt;Replace Text in a PDF Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/rotate-text-inside-pdf/&#34;&gt;Rotate Text Inside PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/search-and-get-text-from-pages-of-a-pdf-document/&#34;&gt;Search and Get Text from Pages of a PDF Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/determine-line-break/&#34;&gt;Determine Line Break&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Working with XML</title>
      <link>https://docs.aspose.com/pdf/net/working-with-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/working-with-xml/</guid>
      <description>
        
        
        &lt;p&gt;In this section, you will learn how to generate a PDF document from the XML source. Also, we consider two examples: a simple Hello world sample based on XML and creating PDF documents based on sample XML data (breakfast menu).&lt;/p&gt;
&lt;h2 id=&#34;articles-in-this-section&#34;&gt;&lt;strong&gt;Articles in this section&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/supported-xml-schema/&#34;&gt;Supported XML Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/generate-pdf-from-xml/&#34;&gt;Generate PDF from XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/net/create-a-hello-world-pdf-document-through-xml-and-xslt/&#34;&gt;Create a Hello World PDF Document through XML and XSLT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aspose.com/pdf/pdf/net/breakfast-menu-using-xml-and-xslt/&#34;&gt;Breakfast Menu Using XML and XSLT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Miscellaneous</title>
      <link>https://docs.aspose.com/pdf/net/miscellaneous/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/miscellaneous/</guid>
      <description>
        
        
        &lt;h2 id=&#34;getting-product-and-build-information&#34;&gt;&lt;strong&gt;Getting Product and Build Information&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Sometimes, developers need to find information about a component being used in their code. Aspose.PDF contains the BuildVersionInfo class which provides three static members: Product, FileVersion, AssemblyVersion. These members can be used to get information about the component. The following code snippet shows how to get the product and build information.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Miscellaneous-GetBuildInformation-GetBuildInformation.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;use-api-as-measurement-tool&#34;&gt;&lt;strong&gt;Use API as Measurement Tool&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for .NET is PDF creation and manipulation API. However, recently we received a requirement to use this API to add measurement elements (like we do using the measurement tool in Adobe Acrobat) to a PDF document. Something similar to &lt;a href=&#34;http://help.adobe.com/en_US/acrobat/X/standard/using/WS58a04a822e3e50102bd615109794195ff-7f9d.w.html#WS58a04a822e3e50102bd615109794195ff-7f91.w&#34;&gt;measure the height, width, or area of objects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To accomplish this requirement, a class called Measure has been added to the Aspose.InteractiveFeatures.Annotations namespace. It describes the measure coordinate system. This class contains descriptions of measure units which are used to measure objects, data format, display options, recalculation factor etc. This information is stored for measure annotations, a feature available from Aspose.PDF for .NET 9.5 .0.&lt;/p&gt;
&lt;p&gt;During the implementation of this feature, we did not notice how this information affects the display of measure objects in PDF page but this object is created when we create measure lines using Adobe Acrobat. Also one needs to read this data which is created by other application.&lt;/p&gt;
&lt;p&gt;The measure object is created using the existing annotation types: LineAnnotation for linear measure and PolyLineAnnotation for area and perimeter measure. To accomplish the above stated requirement, you may consider using the following code snippets which can be used to create measure objects (distance line and perimeter/area line).&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

The Measure property is added to the LineAnnotation and PolyLineAnnotation classes.
&lt;/div&gt;

&lt;h3 id=&#34;measure-class-members&#34;&gt;&lt;strong&gt;Measure class members&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;constructor:
&lt;br&gt;public Measure(Annotation annotation)&lt;/p&gt;
&lt;h4 id=&#34;measure-class-properties&#34;&gt;&lt;strong&gt;Measure class Properties:&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ScaleRatio - A text string expressing the scale ratio of the drawing.&lt;/li&gt;
&lt;li&gt;XFormat - A number format array for measurement of change along the X-axis and, if Y is not present, along the Y-axis as well.&lt;/li&gt;
&lt;li&gt;YFormat - A number format array for measurement of change along the Y-axis.&lt;/li&gt;
&lt;li&gt;DistanceFormat - A number format array for measurement of distance in any direction.&lt;/li&gt;
&lt;li&gt;AreaFormat - A number format array for measurement of area.&lt;/li&gt;
&lt;li&gt;AngleFormat - A number format array for measurement of angles.&lt;/li&gt;
&lt;li&gt;SlopeFormat - A number format array for measurement of the slope of a line.&lt;/li&gt;
&lt;li&gt;Origin - Point that shall specify the origin of the measurement coordinate system in default user space coordinates.&lt;/li&gt;
&lt;li&gt;XYFactor - A factor that shall be used to convert the largest units along the y axis to the largest units along the x axis.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;numberformat-class&#34;&gt;&lt;strong&gt;NumberFormat class&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The NumberFormat class has been added to the Measure class and represents the number format used for measures.
&lt;br&gt;constructor:
&lt;br&gt;public NumberFormat(Measure measure)&lt;/p&gt;
&lt;h4 id=&#34;numberformat-class-properties&#34;&gt;&lt;strong&gt;NumberFormat class Properties&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;UnitLabel - A text string specifying a label for displaying the units.&lt;/li&gt;
&lt;li&gt;ConversionFactor - The conversion factor used to multiply a value in partial units of the previous number format array element to obtain a value in the units of this number format.&lt;/li&gt;
&lt;li&gt;FractionDisplayment - In what manner fractional values are displayed.&lt;/li&gt;
&lt;li&gt;Precision - If FractionDisplayment is set to ShowAsDecimal, this value is the precision of the fractional value. It shall be a multiple of 10. The default is 100.&lt;/li&gt;
&lt;li&gt;Denominator - If FractionDisplayment is set to ShowAsFraction, this value is the denominator of the fraction. The default value is 16.&lt;/li&gt;
&lt;li&gt;ForceDenominator - If FractionDisplayment is set to ShowAsFraction, this value determines whether or not the fraction may be reduced. If the value is true, the fraction may not be reduced.&lt;/li&gt;
&lt;li&gt;ThousandsSeparator - Text that shall be used between orders of thousands in display of numerical values. An empty string indicates that no text shall be added. Default is comma (,).&lt;/li&gt;
&lt;li&gt;FractionSeparator - Text that shall be used as the decimal position in displaying numerical values. An empty string indicates that the default shall be used. Default is period character (.).&lt;/li&gt;
&lt;li&gt;BeforeText - Text that shall be concatenated to the left of the label.&lt;/li&gt;
&lt;li&gt;AfterText - Text that shall be concatenated after the label.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fractionstyle-enumeration&#34;&gt;&lt;strong&gt;FractionStyle enumeration&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The FractionStyle enumeration has been added to the NumberFormat class.&lt;/p&gt;
&lt;h4 id=&#34;fractionstyle-values&#34;&gt;&lt;strong&gt;FractionStyle Values&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ShowAsDecimal - Show fractional values as decimal fraction.&lt;/li&gt;
&lt;li&gt;ShowAsFraction - Show fractional value as fraction.&lt;/li&gt;
&lt;li&gt;Round - Round fractional values to the nearest whole integer.&lt;/li&gt;
&lt;li&gt;Truncate - Truncate to achieve whole units.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;numberformatlist-class&#34;&gt;&lt;strong&gt;NumberFormatList class&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The NumberFormatList class has been added to the Measure class and represents list of number formats.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;  &lt;/code&gt;constructor
&lt;code&gt;    &lt;/code&gt;public NumberFormatList(Measure measure)&lt;/p&gt;
&lt;h4 id=&#34;numberformatlist-properties&#34;&gt;&lt;strong&gt;NumberFormatList Properties&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Item(System.Int32) - Gets or sets number format in list by its index.&lt;/li&gt;
&lt;li&gt;Count - Count if items in the list.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;methods&#34;&gt;&lt;strong&gt;Methods&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;public void Add(NumberFormat value)
&lt;code&gt;    &lt;/code&gt;Adds number format to list.&lt;/li&gt;
&lt;li&gt;public void Insert(int index, NumberFormat value)
&lt;code&gt;    &lt;/code&gt;Inserts number format into list.&lt;/li&gt;
&lt;li&gt;public void RemoveAt(int index)
&lt;code&gt;    &lt;/code&gt;Removes number format from list.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-code&#34;&gt;&lt;strong&gt;Example Code&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following example demonstrates how to use Measure with LineAnnotation.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Miscellaneous-UseMeasureWithLineAnnotation-UseMeasureWithLineAnnotation.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;The following example demonstrates how to use Measure with PolylineAnnotation.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Miscellaneous-UseMeasureWithPolylineAnnotation-UseMeasureWithPolylineAnnotation.cs&#34;&gt;&lt;/script&gt;

&lt;p&gt;The following code snippet demonstrates how to read Measure properties.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Miscellaneous-ReadMeasure-ReadMeasure.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Net: Advanced Features</title>
      <link>https://docs.aspose.com/pdf/net/advanced-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/net/advanced-features/</guid>
      <description>
        
        
        &lt;h2 id=&#34;sending-pdf-to-browser-for-download&#34;&gt;&lt;strong&gt;Sending Pdf to Browser for Download&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Sometimes when you are developing an ASP.NET application, you need to send PDF file(s) to web browser(s) for download without saving them physically. In order to achieve that you can save PDF document into MemoryStream object after generating it and pass bytes from that MemoryStream to Response object. Doing this will make the browser to download the generated PDF document.&lt;/p&gt;
&lt;p&gt;Following code snippet demonstrate the above functionality:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-Examples.Web-SendPdfToBrowserForDownload.aspx-1.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;extracting-embedded-files-from-a-pdf-file&#34;&gt;&lt;strong&gt;Extracting embedded files from a PDF file&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF stands out when it comes to advanced features for working with PDF format files. It extracts embedded files way better than other tools offering this feature.&lt;/p&gt;
&lt;p&gt;With Aspose.PDF for .NET, you can efficiently extract any embedded file which may be an embedded font, an image, a video or an audio. Following goal-specific approach demonstrates how quickly and efficiently the embedded files can be extracted. Aspose.PDF facilitates you to extract all the font files whether it is a true type (TTF) or an open type font (OTF). Likewise, using this feature, image of any format JPG, PNG, SVG etc can be extracted in its &amp;lsquo;as is&amp;rsquo; condition.&lt;/p&gt;
&lt;p&gt;Following code snippet extracts all the embedded files from a PDF file:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-DocumentConversion-PDFToXML-PDFToXML.cs&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;use-of-latex-script-to-add-mathematical-expressions&#34;&gt;&lt;strong&gt;Use of Latex Script to Add Mathematical Expressions&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;With Aspose.PDF, you can add mathematical expressions/formulas inside PDF document using latex script. Following examples show how this feature can be used in two different ways, in order to add a mathematical formula inside a table cell:&lt;/p&gt;
&lt;h3 id=&#34;without-preamble-and-document-environment&#34;&gt;&lt;strong&gt;Without preamble and document environment&lt;/strong&gt;&lt;/h3&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Text-UseLatexScript-WithoutPreambleanddocument.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;with-preamble-and-document-environment&#34;&gt;&lt;strong&gt;With preamble and document environment&lt;/strong&gt;&lt;/h3&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/7e1330795d76012fcb04248bb81d45b3.js?file=Examples-CSharp-AsposePDF-Text-UseLatexScript2-WithPreambleanddocument.cs&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;support-for-latex-tags&#34;&gt;&lt;strong&gt;Support for Latex Tags&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The align environment is defined in amsmath package, and proof environment is defined in amsthm package. Thus, you have to specify these packages using \usepackage command in the document preamble. And this means that you have to enclose the LaTeX text into document environment either as shown in the following code sample.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/63473b1ba28e09e229cfbf4430eabd8a.js?file=Examples-CSharp-AsposePDF-Text-UseLatexScript3-UseLatexScript3.cs&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
  </channel>
</rss>
