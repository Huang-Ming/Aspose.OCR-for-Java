<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working with Pages in Ruby</title>
    <link>https://docs.aspose.com/pdf/java/working-with-pages-in-ruby/</link>
    <description>Recent content in Working with Pages in Ruby on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.aspose.com/pdf/java/working-with-pages-in-ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Java: Concatenate PDF Files in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/concatenate-pdf-files-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/concatenate-pdf-files-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---concatenate-pdf-files&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Concatenate PDF Files&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To concatenate PDF files using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;ConcatenatePdfFiles&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Open the target document

pdf1 = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# Open the source document

pdf2 = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input2.pdf&#39;)

# Add the pages of the source document to the target document

pdf1.getPages().add(pdf2.getPages())

# Save the concatenated output file (the target document)

pdf1.save(data_dir+ &amp;quot;Concatenate_output.pdf&amp;quot;)

puts &amp;quot;New document has been saved, please check the output file&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Concatenate PDF Files (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/concatenatepdffiles.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Delete a Particular Page from the PDF File in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/delete-a-particular-page-from-the-pdf-file-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/delete-a-particular-page-from-the-pdf-file-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---delete-page&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Delete Page&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To delete a Particular Page from the PDF document using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;DeletePage&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Open the target document

pdf = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# delete a particular page

pdf.getPages().delete(2)

# save the newly generated PDF file

pdf.save(data_dir + &amp;quot;output.pdf&amp;quot;)

puts &amp;quot;Page deleted successfully!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Delete Page (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/deletepage.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Get a Particular Page in a PDF File in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/get-a-particular-page-in-a-pdf-file-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/get-a-particular-page-in-a-pdf-file-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---get-page&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Get Page&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To get a Particular Page in a PDF document using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;GetPage&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Open the target document

pdf = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# get the page at particular index of Page Collection

pdf_page = pdf.getPages().get_Item(1)

# create a new Document object

new_document = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new

# add page to pages collection of new document object

new_document.getPages().add(pdf_page)

# save the newly generated PDF file

new_document.save(data_dir + &amp;quot;output.pdf&amp;quot;)

puts &amp;quot;Process completed successfully!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Get Page (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/getpage.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Get Page Count of PDF in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/get-page-count-of-pdf-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/get-page-count-of-pdf-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---get-page-count&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Get Page Count&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To get page count of Pdf document using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;GetNumberOfPages&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Create PDF document

pdf = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

page_count = pdf.getPages().size()

puts &amp;quot;Page Count:&amp;quot; + page_count.to_s
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Get Page Count (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/getnumberofpages.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Get Page Properties in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/get-page-properties-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/get-page-properties-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---get-page-properties&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Get Page Properties&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To get page properties of Pdf document using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;GetPageProperties&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Create PDF document

pdf_document = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# get page collection

page_collection = pdf_document.getPages()

# get particular page

pdf_page = page_collection.get_Item(1)

#get page properties

puts &amp;quot;ArtBox : Height = &amp;quot; + pdf_page.getArtBox().getHeight().to_s + &amp;quot;, Width = &amp;quot; + pdf_page.getArtBox().getWidth().to_s + &amp;quot;, LLX = &amp;quot; + pdf_page.getArtBox().getLLX().to_s + &amp;quot;, LLY = &amp;quot; + pdf_page.getArtBox().getLLY().to_s + &amp;quot;, URX = &amp;quot; + pdf_page.getArtBox().getURX().to_s + &amp;quot;, URY = &amp;quot; + pdf_page.getArtBox().getURY().to_s

puts &amp;quot;BleedBox : Height = &amp;quot; + pdf_page.getBleedBox().getHeight().to_s + &amp;quot;, Width = &amp;quot; + pdf_page.getBleedBox().getWidth().to_s + &amp;quot;, LLX = &amp;quot; + pdf_page.getBleedBox().getLLX().to_s + &amp;quot;, LLY = &amp;quot; + pdf_page.getBleedBox().getLLY().to_s + &amp;quot;, URX = &amp;quot; + pdf_page.getBleedBox().getURX().to_s + &amp;quot;, URY = &amp;quot; + pdf_page.getBleedBox().getURY().to_s

puts &amp;quot;CropBox : Height = &amp;quot; + pdf_page.getCropBox().getHeight().to_s + &amp;quot;, Width = &amp;quot; + pdf_page.getCropBox().getWidth().to_s + &amp;quot;, LLX = &amp;quot; + pdf_page.getCropBox().getLLX().to_s + &amp;quot;, LLY = &amp;quot; + pdf_page.getCropBox().getLLY().to_s + &amp;quot;, URX = &amp;quot; + pdf_page.getCropBox().getURX().to_s + &amp;quot;, URY = &amp;quot; + pdf_page.getCropBox().getURY().to_s

puts &amp;quot;MediaBox : Height = &amp;quot; + pdf_page.getMediaBox().getHeight().to_s + &amp;quot;, Width = &amp;quot; + pdf_page.getMediaBox().getWidth().to_s + &amp;quot;, LLX = &amp;quot; + pdf_page.getMediaBox().getLLX().to_s + &amp;quot;, LLY = &amp;quot; + pdf_page.getMediaBox().getLLY().to_s + &amp;quot;, URX = &amp;quot; + pdf_page.getMediaBox().getURX().to_s + &amp;quot;, URY = &amp;quot; + pdf_page.getMediaBox().getURY().to_s

puts &amp;quot;TrimBox : Height = &amp;quot; + pdf_page.getTrimBox().getHeight().to_s + &amp;quot;, Width = &amp;quot; + pdf_page.getTrimBox().getWidth().to_s + &amp;quot;, LLX = &amp;quot; + pdf_page.getTrimBox().getLLX().to_s + &amp;quot;, LLY = &amp;quot; + pdf_page.getTrimBox().getLLY().to_s + &amp;quot;, URX = &amp;quot; + pdf_page.getTrimBox().getURX().to_s + &amp;quot;, URY = &amp;quot; + pdf_page.getTrimBox().getURY().to_s

puts &amp;quot;Rect : Height = &amp;quot; + pdf_page.getRect().getHeight().to_s + &amp;quot;, Width = &amp;quot; + pdf_page.getRect().getWidth().to_s + &amp;quot;, LLX = &amp;quot; + pdf_page.getRect().getLLX().to_s + &amp;quot;, LLY = &amp;quot; + pdf_page.getRect().getLLY().to_s + &amp;quot;, URX = &amp;quot; + pdf_page.getRect().getURX().to_s + &amp;quot;, URY = &amp;quot; + pdf_page.getRect().getURY().to_s

puts &amp;quot;Page Number :- &amp;quot; + pdf_page.getNumber().to_s

puts &amp;quot;Rotate :-&amp;quot; + pdf_page.getRotate().to_s
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Get Page Properties (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/getpageproperties.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Insert an Empty Page at End of PDF File in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/insert-an-empty-page-at-end-of-pdf-file-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/insert-an-empty-page-at-end-of-pdf-file-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---insert-an-empty-page-at-end-of-pdf-file&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Insert an Empty Page at End of PDF File&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To Insert an Empty Page at the end of PDF document using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;InsertEmptyPageAtEndOfFile&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Open the target document

pdf = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# insert a empty page in a PDF

pdf.getPages().add()

# Save the concatenated output file (the target document)

pdf.save(data_dir+ &amp;quot;output.pdf&amp;quot;)

puts &amp;quot;Empty page added successfully!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Insert an Empty Page at End of PDF File (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/insertemptypageatendoffile.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Insert an Empty Page into a PDF File in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/insert-an-empty-page-into-a-pdf-file-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/insert-an-empty-page-into-a-pdf-file-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---insert-an-empty-page&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Insert an Empty Page&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To Insert an Empty Page into a Pdf document using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;InsertEmptyPage&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Open the target document

pdf = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# insert a empty page in a PDF

pdf.getPages().insert(1)

# Save the concatenated output file (the target document)

pdf.save(data_dir+ &amp;quot;output.pdf&amp;quot;)

puts &amp;quot;Empty page added successfully!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Insert an Empty Page (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/insertemptypage.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Split PDF File into Individual Pages in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/split-pdf-file-into-individual-pages-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/split-pdf-file-into-individual-pages-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---split-pages&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Split Pages&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To split PDF document into individual pages using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;SplitAllPages&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Open the target document

pdf = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# loop through all the pages

pdf_page = 1

#for (int pdfPage = 1; pdfPage&amp;lt;= pdfDocument1.getPages().size(); pdfPage++)

while pdf_page &amp;lt;= pdf.getPages().size()

# create a new Document object

new_document = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new

# get the page at particular index of Page Collection

new_document.getPages().add(pdf.getPages().get_Item(pdf_page))

# save the newly generated PDF file

new_document.save(data_dir + &amp;quot;page_#{pdf_page}.pdf&amp;quot;)

pdf_page +=1

end

puts &amp;quot;Split process completed successfully!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Split Pages (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/splitallpages.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Update Page Dimensions in Ruby</title>
      <link>https://docs.aspose.com/pdf/java/update-page-dimensions-in-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/update-page-dimensions-in-ruby/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insasposepdf---update-page-dimensions&#34;&gt;&lt;ins&gt;&lt;strong&gt;Aspose.PDF - Update Page Dimensions&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To update page Dimensions using &lt;strong&gt;Aspose.PDF Java for Ruby&lt;/strong&gt;, simply invoke &lt;strong&gt;UpdatePageDimensions&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ruby Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
# The path to the documents directory.

data_dir = File.dirname(File.dirname(File.dirname(File.dirname(__FILE__)))) + &#39;/data/&#39;

# Open the target document

pdf = Rjb::import(&#39;com.aspose.pdf.Document&#39;).new(data_dir + &#39;input1.pdf&#39;)

# get page collection

page_collection = pdf.getPages()

# get particular page

pdf_page = page_collection.get_Item(1)

# set the page size as A4 (11.7 x 8.3 in) and in Aspose.PDF, 1 inch = 72 points

# so A4 dimensions in points will be (842.4, 597.6)

pdf_page.setPageSize(597.6,842.4)

# save the newly generated PDF file

pdf.save(data_dir + &amp;quot;output.pdf&amp;quot;)

puts &amp;quot;Dimensions updated successfully!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insdownload-running-code&#34;&gt;&lt;ins&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Download &lt;strong&gt;Update Page Dimensions (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/tree/master/Plugins/Aspose_Pdf_Java_for_Ruby/lib/asposepdfjava/Pages/updatepagedimensions.rb&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
