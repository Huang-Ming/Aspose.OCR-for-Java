<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working with Text in Python</title>
    <link>https://docs.aspose.com/pdf/java/working-with-text-in-python/</link>
    <description>Recent content in Working with Text in Python on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.aspose.com/pdf/java/working-with-text-in-python/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Java: Add HTML String using DOM in Python</title>
      <link>https://docs.aspose.com/pdf/java/add-html-string-using-dom-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/add-html-string-using-dom-in-python/</guid>
      <description>
        
        
        &lt;p&gt;&lt;ins&gt;To add HTML string in Pdf document using &lt;strong&gt;Aspose.PDF Java for Python&lt;/strong&gt;, simply invoke &lt;strong&gt;AddHtml&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
# Instantiate Document object
doc=self.Document()
page=doc.getPages().add()

title=self.HtmlFragment(&amp;quot;&amp;lt;fontsize=10&amp;gt;&amp;lt;b&amp;gt;&amp;lt;i&amp;gt;Table&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/fontsize&amp;gt;&amp;quot;)

margin=self.MarginInfo()
#margin.setBottom(10)
#margin.setTop(200)

# Set margin information
title.setMargin(margin)

# Add HTML Fragment to paragraphs collection of page
page.getParagraphs().add(title)

# Save PDF file
doc.save(self.dataDir + &#39;html.output.pdf&#39;)

print &amp;quot;HTML added successfully&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;strong&gt;Add HTML (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/blob/master/Plugins/Aspose_Pdf_Java_for_Python/test/WorkingWithText/AddHtml/AddHtml.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://asposepdfjavapython.codeplex.com/SourceControl/latest#test/WorkingWithText/AddHtml/AddHtml.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Add Text to an existing PDF file in Python</title>
      <link>https://docs.aspose.com/pdf/java/add-text-to-an-existing-pdf-file-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/add-text-to-an-existing-pdf-file-in-python/</guid>
      <description>
        
        
        &lt;p&gt;&lt;ins&gt;To add Text string in Pdf document using &lt;strong&gt;Aspose.PDF Java for Python&lt;/strong&gt;, simply invoke &lt;strong&gt;AddText&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;doc=self.Document()
doc=self.dataDir + &#39;input1.pdf&#39;

pdf_page=self.Document()
pdf_page.getPages().get_Item(1)

text_fragment=self.TextFragment(&amp;quot;main text&amp;quot;)
position=self.Position()
text_fragment.setPosition(position(100,600))

font_repository=self.FontRepository()
color=self.Color()

text_fragment.getTextState().setFont(font_repository.findFont(&amp;quot;Verdana&amp;quot;))
text_fragment.getTextState().setFontSize(14)

text_builder=self.TextBuilder(pdf_page)
text_builder.appendText(text_fragment)

# Save PDF file

doc.save(self.dataDir + &amp;quot;Text_Added.pdf&amp;quot;)

print &amp;quot;Text added successfully&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;strong&gt;Add Text (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/blob/master/Plugins/Aspose_Pdf_Java_for_Python/test/WorkingWithText/AddText/AddText.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://asposepdfjavapython.codeplex.com/SourceControl/latest#test/WorkingWithText/AddText/AddText.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Java: Extract Text From All the Pages of a PDF Document in Python</title>
      <link>https://docs.aspose.com/pdf/java/extract-text-from-all-the-pages-of-a-pdf-document-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/extract-text-from-all-the-pages-of-a-pdf-document-in-python/</guid>
      <description>
        
        
        &lt;p&gt;&lt;ins&gt;To extract TextrFrom All the Pages Pdf document using &lt;strong&gt;Aspose.PDF Java for Python&lt;/strong&gt;, simply invoke &lt;strong&gt;ExtractTextFromAllPages&lt;/strong&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Open the target document
pdf=self.Document()
pdf=self.dataDir + &#39;input1.pdf&#39;

text_absorber=self.TextAbsorber()

pdf.getPages().accept(text_absorber)

extracted_text=text_absorber.getText()

writer=self.FileWriter(self.File(self.dataDir + &#39;extracted_text.out.txt&#39;))
writer.write(extracted_text)
writer.close()

print &amp;quot;Text extracted successfully. Check output file.&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Download Running Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;strong&gt;Extract Text From All the Pages (Aspose.PDF)&lt;/strong&gt; from any of the below mentioned social coding sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aspose-pdf/Aspose.PDF-for-Java/blob/master/Plugins/Aspose_Pdf_Java_for_Python/test/WorkingWithText/ExtractTextFromAllPages/ExtractTextFromAllPages.py&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://asposepdfjavapython.codeplex.com/SourceControl/latest#test/WorkingWithText/ExtractTextFromAllPages/ExtractTextFromAllPages.py&#34;&gt;CodePlex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
