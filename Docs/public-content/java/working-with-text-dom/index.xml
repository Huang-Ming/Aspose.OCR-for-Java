<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation – Working with Text - DOM</title>
    <link>https://docs.aspose.com/pdf/java/working-with-text-dom/</link>
    <description>Recent content in Working with Text - DOM on Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.aspose.com/pdf/java/working-with-text-dom/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Java: Add Text to a PDF file</title>
      <link>https://docs.aspose.com/pdf/java/add-text-to-a-pdf-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/add-text-to-a-pdf-file/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insadd-text-to-an-existing-pdf-file&#34;&gt;&lt;ins&gt;&lt;strong&gt;Add Text to an existing PDF file&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To add text to an existing PDF file:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the input PDF using the &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/Document&#34;&gt;Document&lt;/a&gt; object.&lt;/li&gt;
&lt;li&gt;Get the particular page to which you want to add the text.&lt;/li&gt;
&lt;li&gt;Create a TextFragment object with the input text along with other text properties. The TextBuilder object created from that particular page – to which you want to add the text – allow you to add the TextFragment object to the page using the appendText method.&lt;/li&gt;
&lt;li&gt;Call the &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/Document&#34;&gt;Document&lt;/a&gt; object&amp;rsquo;s save method and save the output PDF file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following code snippet shows you how to add text in an existing PDF file.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-AddTextToAnExistingPDFFile-.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;inshow-to-add-transparent-text-in-pdf&#34;&gt;&lt;ins&gt;&lt;strong&gt;How to add transparent Text in PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;A PDF file contains Image, Text, Graph, attachment, Annotations objects and while creating TextFragment, you can set foreground, background color information as well as text formatting. Aspose.PDF for Java supports the feature to add text with Alpha color channel.&lt;/p&gt;
&lt;p&gt;The following code snippet shows how to add text with transparent color.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-HowToAddTransparentTextInPDF-.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insadd-html-string-using-dom&#34;&gt;&lt;ins&gt;&lt;strong&gt;Add HTML String using DOM&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The aspose.pdf.generator.text class contains a property called IsHtmlTagSupported which makes it possible to add HTML tags/contents into PDF files. The added content is rendered in native HTML tags instead of appearing as a simple text string. To support a similar feature in the new Document Object Model (DOM) of the Aspose.Pdf namespace, the HtmlFragment class has been introduced.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/htmlfragment&#34;&gt;HtmlFragment &lt;/a&gt;instance can be used to specify the HTML contents which should be placed inside the PDF file. Similar to TextFragment, HtmlFragment is a paragraph level object and can be added to the Page object&amp;rsquo;s paragraphs collection. The following code snippets shows the steps to place HTML contents inside PDF file using DOM approach.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-AddHTMLStringUsingDOM-.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Following code snippet demonstrate steps how to add HTML ordered lists into document:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/282750bc23ba43d2659ba38470239283.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdfExamples-Text-AddHTMLOrderedListIntoDocuments-AddHTMLOrderedListIntoDocuments.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;You can also set HTML string formatting using setTextState() method as following:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/282750bc23ba43d2659ba38470239283.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdfExamples-Text-SetHTMLStringFormatting-SetHTMLStringFormatting.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;In case if you set some text attributes values via html markup and then provide the same values in setTextState() properties they will overwrite html parameters by properties form setTextState() instance. The following code snippets shows described behavior.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-com-gists/282750bc23ba43d2659ba38470239283.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdfExamples-Text-AddHTMLUsingDOMAndOverwrite-AddHTMLUsingDOMAndOverwrite.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insfootnotes-and-endnotes-dom&#34;&gt;&lt;ins&gt;&lt;strong&gt;FootNotes and EndNotes (DOM)&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;FootNotes indicate notes in the text of your paper by using consecutive superscript numbers. The actual note is indented and can occur as a footnote at the bottom of the page.&lt;/p&gt;
&lt;p&gt;In a footnote referencing system, indicate a reference by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;putting a small number above the line of type directly following the source material. This number is called a note identifier. It sits slightly above the line of text.&lt;/li&gt;
&lt;li&gt;putting the same number, followed by a citation of your source, at the bottom of the page. Footnoting should be numerical and chronological: the first reference is 1, the second is 2, and so on. The advantage of footnoting is that the reader can simply cast their eyes down the page to discover the source of a reference which interests them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please follow the steps specified below to create a FootNote:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a Document instance&lt;/li&gt;
&lt;li&gt;Create a Page object&lt;/li&gt;
&lt;li&gt;Create a TextFragment object&lt;/li&gt;
&lt;li&gt;Create a Note instance and pass it&amp;rsquo;s value to TextFragment.FootNote property&lt;/li&gt;
&lt;li&gt;Add TextFragment to paragraphs collection of page instance&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;custom-line-style-for-footnote&#34;&gt;&lt;strong&gt;Custom line style for FootNote&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following example demonstrates how to add Footnotes to the bottom of the PDF page and define custom line style.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-FootNotesAndEndNotes-CustomLineStyleForFootNote.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;customize-footnote-label&#34;&gt;&lt;strong&gt;Customize FootNote label&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;By default, the FootNote number is incremental starting from 1. However we may have a requirement to set custom FootNote label. In order to accomplish this requirement, please try using following code snippet&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-FootNotesAndEndNotes-CustomizeFootnoteLabel.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;how-to-create-endnotes&#34;&gt;&lt;strong&gt;How to Create EndNotes&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;An EndNote is source citation that refers the readers to a specific place at the end of the paper where they can find out the source of the information or words quoted or mentioned in the paper.&lt;/p&gt;
&lt;p&gt;When using Endnotes, your quoted or paraphrased sentence or summarized material is followed by a superscript number.&lt;/p&gt;
&lt;p&gt;The following example demonstrates how to add an Endnote in PDF page.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-FootNotesAndEndNotes-HowToCreateEndNotes.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insadd-rotated-text-inside-pdf-document&#34;&gt;&lt;ins&gt;&lt;strong&gt;Add Rotated Text inside PDF Document&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for Java provides &lt;strong&gt;setRotation()&lt;/strong&gt; method in &lt;strong&gt;TextState&lt;/strong&gt; Class, which helps specifying different rotation angles of text inside PDF document. In various scenarios, text rotation can be an important requirement and in order to implement this functionality, please check following code snippet:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-pdf-Text-AddRotatedTextInPDF-1.java&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Java: Extract Text from PDF</title>
      <link>https://docs.aspose.com/pdf/java/extract-text-from-pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/extract-text-from-pdf/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insextract-text-from-all-the-pages-of-a-pdf-document&#34;&gt;&lt;ins&gt;&lt;strong&gt;Extract Text From All the Pages of a PDF Document&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;One of the most common tasks that developers need to perform is to extract text from a PDF document. In this example, Aspose.PDF is used to extract text from all pages in a PDF document.&lt;/p&gt;
&lt;p&gt;To extract all text in a PDF:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a TextAbsorber object.&lt;/li&gt;
&lt;li&gt;Open the PDF using the &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/Document&#34;&gt;Document&lt;/a&gt; class.&lt;/li&gt;
&lt;li&gt;Call the &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/PageCollection&#34;&gt;Pages&lt;/a&gt; collection&amp;rsquo;s &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/pagecollection/methods/accept(com.aspose.pdf.ImagePlacementAbsorber)/&#34;&gt;accept(..)&lt;/a&gt; method.
The TextAbsorber class absorbs the text from the document and returns it in the Text property.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following code snippet shows how to extract text from a PDF.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ExtractTextFromAllThePagesOfPDFDocument-.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;To extract text from a specific page, specify the page using its index against the &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/pagecollection/methods/accept(com.aspose.pdf.ImagePlacementAbsorber)/&#34;&gt;accept(..)&lt;/a&gt; method:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-ExtractTextFromAllThePagesOfPDFDocument-Info1.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;If the heap memory is limited, then please try cleaning the Aspose caches. Try using the following method.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-ExtractTextFromAllThePagesOfPDFDocument-Info2.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insextract-text-from-pdf-using-textdevice&#34;&gt;&lt;ins&gt;&lt;strong&gt;Extract Text from PDF using TextDevice&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;TextDevice class allows you to extract text from a particular page of a PDF file. In order to do that, you need to create a &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/Document&#34;&gt;Document&lt;/a&gt; object, so that you can access the particular page of the PDF file. You also need to create an object of TextDevice class. This class provides a method named process(..), which allows you to extract the text from a particular page. In the following example, we have selected the first page to extract the text and have saved the output in a Text file.&lt;/p&gt;
&lt;h3 id=&#34;extract-text-from-particular-page&#34;&gt;&lt;strong&gt;Extract text from particular page&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet shows you how to extract text from a particular page using a text device.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ExtractTextFromPDFUsingTextDevice-ExtractTextFromParticularPage.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;extract-text-from-all-pages-of-pdf&#34;&gt;&lt;strong&gt;Extract text from all pages of PDF&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet shows you how to iterate through all the pages of PDF file and extract the text into a text file.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ExtractTextFromPDFUsingTextDevice-ExtractTextFromAllPagesOfPDF.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insextract-text-from-an-particular-page-region&#34;&gt;&lt;ins&gt;&lt;strong&gt;Extract Text from an particular page region&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;TextAbsorber class provides the capability to extract text from a particular/all pages of a PDF document. This class returns the extracted text using the getText() method. However, if we have the requirement to extract text from a particular page region, we can use &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/Rectangle&#34;&gt;Rectangle&lt;/a&gt; property of TextSearchOptions. The setRectangle(..) method takes Rectangle object as an argument and while using this method, we can specify the region of the page from which we need to extract the text.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/pagecollection/methods/accept(com.aspose.pdf.ImagePlacementAbsorber)/&#34;&gt;accept(..)&lt;/a&gt; method of a page is called to extract the text. Create objects of &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/Document&#34;&gt;Document&lt;/a&gt; and TextAbsorber classes. Call &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/pagecollection/methods/accept(com.aspose.pdf.ImagePlacementAbsorber)/&#34;&gt;accept(..)&lt;/a&gt; method on the individual page of &lt;a href=&#34;http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/Document&#34;&gt;Document&lt;/a&gt; object. The Index is the particular page number from where text needs to be extracted. You can get text from the getText() method of the TextAbsorber class.&lt;/p&gt;
&lt;p&gt;The following code snippet shows you how to extract text from an individual page.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ExtractTextFromAnParticularPageRegion-.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insextract-text-based-on-columns&#34;&gt;&lt;ins&gt;&lt;strong&gt;Extract text based on columns&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;A PDF file may comprise of Text, Image, Annotations, Attachments, Graphs etc elements and Aspose.PDF for Java offers the feature to Add as well as manipulate all of these elements. This API is remarkable when comes to Text addition and extraction from PDF document and we may come across a scenario where a PDF document is comprised of more than one columns (multi-column) PDF document and we need to extract the page contents while honoring the same layout, then Aspose.PDF for Java is the right choice to accomplish this requirement. One approach is to reduce the font size of contents inside the PDF document and then perform text extraction. The following code snippet can be used to fulfill this requirement.&lt;/p&gt;
&lt;p&gt;The following code snippet shows the steps to reduce text size and then try extracting text from PDF document.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ExtractTextBasedOnColumns-ExtractTextBasedOnColumns.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;second-approach---using-setscalefactor-method&#34;&gt;&lt;strong&gt;Second approach - Using setScaleFactor(..) method&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;In this new release, we also have introduced several improvements in TextAbsorber and in the internal text formatting mechanism. So now during the text extraction using ‘Pure’ mode, you may call setScaleFactor(..) method and it can be another approach to extract text from multi-column PDF document besides the above-stated approach. This scale factor may be set to adjust the grid which is used for the internal text formatting mechanism during text extraction. Specifying the ScaleFactor values between 1 and 0.1 (including 0.1) has the same effect as font reducing.&lt;/p&gt;
&lt;p&gt;Specifying the ScaleFactor values between 0.1 and -0.1 is treated as zero value, but it makes the algorithm to calculate scale factor needed during extracting text automatically. The calculation is based on average glyph width of the most popular font on the page, but we cannot guarantee that in extracted text no string of column reaches the start of the next column. Please note that if ScaleFactor value is not specified, the default value of 1.0 will be used. It means no scaling will be carried out. If the specified ScaleFactor value is more than 10 or less than -0.1, the default value of 1.0 will be used.&lt;/p&gt;
&lt;p&gt;We propose the usage of auto-scaling (ScaleFactor = 0) when processing a large number of PDF files for text content extraction. Or manually set redundant reducing of grid width ( about ScaleFactor = 0.5). However, you must not determine whether scaling is necessary for concrete documents or not. If You set redundant reducing of grid width for the document (that doesn&amp;rsquo;t need in it), the extracted text content will remain fully adequate. Please take a look over the following code snippet.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ExtractTextBasedOnColumns-UsingSetScaleFactorMethod.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;Please note that there is no direct correspondence between the new ScaleFactor and the old coefficient of manually font reducing. However, by default algorithm takes into account the value of font size that has already reduced due to some internal reasons. For example, reducing font size from 10 to 7 has the same effect as setting the scale factor to 5/8 (= 0.625).&lt;/p&gt;
&lt;h2 id=&#34;insextract-rotated-text-and-rotation-angle-of-text-characters&#34;&gt;&lt;ins&gt;&lt;strong&gt;Extract Rotated Text and Rotation Angle of Text Characters&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In case a PDF has rotated text inside and you need to extract it as well as determine the rotation angle of a text character, you can use functionality like in following code snippet.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-pdf-Text-ExtractRotatedText.java&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Java: Search and Get Text from Pages of a PDF Document</title>
      <link>https://docs.aspose.com/pdf/java/search-and-get-text-from-pages-of-a-pdf-document/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/search-and-get-text-from-pages-of-a-pdf-document/</guid>
      <description>
        
        
        &lt;h2 id=&#34;inssearch-and-get-text-from-pages-of-pdf-document&#34;&gt;&lt;ins&gt;&lt;strong&gt;Search and Get Text from Pages of PDF Document&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;TextFragmentAbsorber allows you to find text, matching a particular phrase, from all pages of a PDF document.&lt;/p&gt;
&lt;p&gt;To search text in the whole document, call the &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/Page&#34;&gt;Pages&lt;/a&gt; collection&amp;rsquo;s accept() method. The &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/TextFragmentAbsorber&#34;&gt;accept()&lt;/a&gt; method takes a TextFragmentAbsorber object as a parameter, which returns a collection of TextFragment objects. Loop through all the fragments to get their properties, for example Text, Position, XIndent, YIndent, FontName, FontSize, IsAccessible, IsEmbedded, IsSubset, ForegroundColor etc.&lt;/p&gt;
&lt;p&gt;The following code snippet shows how to search an the entire document and display all matches in a console.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-SearchAndGetTextFromThePagesOfPDFDocument-.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;To search text on a particular page and get properties associated with it, provide the page index:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-SearchAndGetTextFromThePagesOfPDFDocument-Info.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;inssearch-and-get-text-segments-from-pages-of-pdf&#34;&gt;&lt;ins&gt;&lt;strong&gt;Search and Get Text Segments from Pages of PDF&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To search text segments on all pages in a document, get a document&amp;rsquo;s TextFragment objects.&lt;/p&gt;
&lt;p&gt;TextFragmentAbsorber allows you to find text, matching a particular phrase, from all the pages in a PDF document. To search text in the whole document, call the Pages|http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/PageCollection collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/TextFragmentAbsorber&#34;&gt;accept()&lt;/a&gt; method. The &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/TextFragmentAbsorber&#34;&gt;accept()&lt;/a&gt; method takes a TextFragmentAbsorber object as a parameter, which returns a collection of TextFragment objects.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

When the TextFragmentCollection collection has been fetched from the document, loop through it to get each TextFragment object&amp;rsquo;s TextSegmentCollection collection. After that, you can get the individual TextSegment object&amp;rsquo;s properties.
&lt;/div&gt;

&lt;p&gt;The following code snippet shows how to search text segments on all pages.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-SearchAndGetTextSegmentsFromPagesOfPDF-.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;To search a specific text segment and get the properties associated, specify the page index for the page you want to search:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-SearchAndGetTextSegmentsFromPagesOfPDF-Info.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;inssearch-and-get-text-from-pages-using-regular-expression&#34;&gt;&lt;ins&gt;&lt;strong&gt;Search and Get Text from pages using Regular Expression&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;TextFragmentAbsorber helps you search and retrieve text from all pages in a document, based on a regular expression.&lt;/p&gt;
&lt;p&gt;To search and get text from a document:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pass the search term as a regular expression to the TextFragmentAbsorber constructor.&lt;/li&gt;
&lt;li&gt;Set the TextFragmentAbsorber object&amp;rsquo;s TextSearchOptions property.
This property requires a TextSearchOptions object: pass true to its constructor when creating a new object.&lt;/li&gt;
&lt;li&gt;To retrieve matching text from all pages, call the Pages|http://www.aspose.com/api/java/pdf/com.aspose.pdf/classes/PageCollection collection&amp;rsquo;s &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/TextFragmentAbsorber&#34;&gt;accept()&lt;/a&gt; method.
TextFragmentAbsorber returns a TextFragmentCollection containing all the fragments matching the criteria specified by the regular expression.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following code snippet shows how to search all pages in a document and get text based on a regular expression.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-SearchAndGetTextFromPagesUsingRegularExpression-.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;To search text on a particular page and get its properties, specify the page index:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-SearchAndGetTextFromPagesUsingRegularExpression-Info1.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;In order to search a string in either upper case or lowercase, you may consider using regular expression.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-SearchAndGetTextFromPagesUsingRegularExpression-Info2.java&#34;&gt;&lt;/script&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-SearchAndGetTextFromPagesUsingRegularExpression-Info3.java&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Java: Replace Text in a PDF Document</title>
      <link>https://docs.aspose.com/pdf/java/replace-text-in-a-pdf-document/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/replace-text-in-a-pdf-document/</guid>
      <description>
        
        
        &lt;h2 id=&#34;insreplace-text-in-pages-of-a-pdf-document&#34;&gt;&lt;ins&gt;&lt;strong&gt;Replace Text in Pages of a PDF Document&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;replacing-text&#34;&gt;&lt;strong&gt;Replacing Text&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;To replace text on all pages in a PDF document using &lt;a href=&#34;https://products.aspose.com/pdf/java&#34;&gt;Aspose.PDF for Java&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First use TextFragmentAbsorber to find the particular phrase to be replaced.&lt;/li&gt;
&lt;li&gt;Then, go through all TextFragments to replace the text and change any other attributes.&lt;/li&gt;
&lt;li&gt;Finally, save the output PDF using the &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/Document&#34;&gt;Document&lt;/a&gt; object&amp;rsquo;s save method.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;replace-text-on-all-pages&#34;&gt;&lt;strong&gt;Replace Text on All Pages&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet shows how to replace text on all pages of PDF document.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ReplaceTextInPagesOfPDFDocument-ReplaceTextOnAllPages.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;replace-text-using-a-regular-expression&#34;&gt;&lt;strong&gt;Replace Text Using a Regular Expression&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet shows how to replace text based on a regular expression.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-ReplaceTextInPagesOfPDFDocument-ReplaceTextUsingRegularExpression.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;use-non-english-japanese-font-when-replacing-text&#34;&gt;&lt;strong&gt;Use Non-English (Japanese) Font When Replacing Text&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet shows how to replace text with Japanese characters. Please note that to add Japanese text, you need to use a font which supports Japanese characters (for example MSGothic).&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ReplaceTextInPagesOfPDFDocument-UseNonEnglishFontWhenReplacingText.java&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;search-text-strings-and-remove-the-contents-between-them&#34;&gt;&lt;strong&gt;Search text strings and remove the contents between them&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The feature to search text strings and remove the contents between them has become available since the release of Aspose.PDF for Java 4.2.1. Please try using the following code snippet to accomplish your requirement..&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ReplaceTextInPagesOfPDFDocument-SearchTextStringsAndRemoveTheContentsBetweenThem.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;To search a text and replace it on a single page, specify the page index for the page you want:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-ReplaceTextInPagesOfPDFDocument-Info.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insreplace-only-first-occurrence-of-the-phrase&#34;&gt;&lt;ins&gt;&lt;strong&gt;Replace only first occurrence of the Phrase&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Replacing the first or particular occurrence of a phrase is quite much similar replacing all the occurrences of the text. The only difference is that in order to replace first or some other particular occurrence, you need to specify the index of that phrase. You first need to use &lt;strong&gt;TextFragmentAbsorber&lt;/strong&gt; to find the particular phrase you want to replace. After that, you need to get particular &lt;strong&gt;TextFragment&lt;/strong&gt; using index, replace the text and change any other attributes. If you want to replace first occurrence, you can specify index as 1. Once you have done that, you only need to save the output PDF using &lt;strong&gt;save(..)&lt;/strong&gt; method of the &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/Document&#34;&gt;&lt;strong&gt;Document&lt;/strong&gt;&lt;/a&gt; object.&lt;/p&gt;
&lt;p&gt;The following code snippet shows you how to replace only first occurrence of the phrase on all pages of PDF file.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ReplaceOnlyFirstOccurrenceOfThePhrase-.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;In case you need to replace the first occurrence of phrase on first/particular page of document, please specify the page index. Please try using the following code line.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-ReplaceOnlyFirstOccurrenceOfThePhrase-Info.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insfind-and-replace-text-by-its-location&#34;&gt;&lt;ins&gt;&lt;strong&gt;Find and Replace Text by its Location&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To replace text in pages of a PDF document using &lt;a href=&#34;https://products.aspose.com/pdf/java&#34;&gt;Aspose.PDF for Java&lt;/a&gt; :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First use TextFragmentAbsorber to find the particular phrase to replace.&lt;/li&gt;
&lt;li&gt;Go through all the TextFragments to replace the text and change any other attributes.&lt;/li&gt;
&lt;li&gt;Save the output PDF using the &lt;a href=&#34;https://apireference.aspose.com/java/pdf/com.aspose.pdf/Document&#34;&gt;Document&lt;/a&gt; object&amp;rsquo;s save method.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;find-and-replace-text-in-pdf-document&#34;&gt;&lt;strong&gt;Find and Replace Text in PDF Document&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The following code snippet shows how to find and replace text based on its location. The code below finds the text &lt;strong&gt;© Adobe Systems Incorp&lt;/strong&gt; which is placed in area (0,0,200,200). It replaces the character &lt;strong&gt;o&lt;/strong&gt; in the word &lt;strong&gt;Adobe&lt;/strong&gt; with &lt;strong&gt;z&lt;/strong&gt; since it is in the range of (0, 0, 120, 200). It then prints the result to the console.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-FindAndReplaceTextByItsLocation-.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;instext-replacement-should-automatically-re-arrange-page-contents&#34;&gt;&lt;ins&gt;&lt;strong&gt;Text Replacement should automatically re-arrange Page contents&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for Java supports the feature to search and replace text inside the PDF file. However recently some customers encountered issues during text replace when particular TextFragment is replaced with smaller contents and some extra spaces are displayed in resultant PDF or in case the TextFragment is replaced with some longer string, then words overlap existing page contents. So the requirement has been to introduce a mechanism that once the text inside a PDF document is replaced, the contents should be re-arranged.&lt;/p&gt;
&lt;p&gt;In order to cater above stated scenarios, Aspose.PDF for Java has been enhanced so that no such issues appear when replacing text inside PDF file. The following code snippet shows how to replace text inside PDF file and the page contents should be re-arranged automatically.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-TextReplacementShouldAutomaticallyRearrangePageContents-.java&#34;&gt;&lt;/script&gt;

&lt;p&gt;You also can specify the &lt;strong&gt;ReplaceAdjustment.WholeWordsHyphenation&lt;/strong&gt; option to wrap text on the next or current line if the current line becomes too long or short after replacement:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-AsposePdf-Text-TextReplacementShouldAutomaticallyRearrangePageContents-Info.java&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;insreplace-fonts-in-existing-pdf-file&#34;&gt;&lt;ins&gt;&lt;strong&gt;Replace fonts in existing PDF file&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for Java supports the capability to replace text in PDF document. However, sometimes you have a requirement to only replace the font being used inside PDF document. So instead of replacing the text, only font being used is replaced. One of the overloads of &lt;strong&gt;TextFragmentAbsorber&lt;/strong&gt; constructor accepts &lt;strong&gt;TextEditOptions&lt;/strong&gt; object as an argument and we can use &lt;strong&gt;RemoveUnusedFonts&lt;/strong&gt; value from &lt;strong&gt;TextEditOptions.FontReplace&lt;/strong&gt; enumeration to accomplish our requirements.
The following code snippet shows how to replace font inside PDF document.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=Examples-src-main-java-com-aspose-pdf-examples-NewDocumentObject-text-ReplaceFontsInExistingPDFFile-.java&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
    <item>
      <title>Java: Determine Line Break</title>
      <link>https://docs.aspose.com/pdf/java/determine-line-break/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.aspose.com/pdf/java/determine-line-break/</guid>
      <description>
        
        
        &lt;h2 id=&#34;instrack-line-breaking-of-multi-line-textfragment&#34;&gt;&lt;ins&gt;&lt;strong&gt;Track Line Breaking of Multi-Line TextFragment&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Aspose.PDF for Java offers logging (tracking) background processing (line breaking) of multi-line text fragments in text adding scenarios. You can use getNotifications() method of Page Class as follows, in order to track line breaking of text fragment:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/aspose-pdf/474c352a71ac9477aa0d604fd32e1c6a.js?file=DetermineLineBreak.java&#34;&gt;&lt;/script&gt;


      </description>
    </item>
    
  </channel>
</rss>
